{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Data/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UseAuth } from \"../Context/UseAuth\";\nimport axios from 'axios';\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const [isTokenValid, setIsTokenValid] = useState(true);\n  var config = {\n    method: 'get',\n    url: 'https://dev.hisprwanda.org/vmis/api/users',\n    headers: {\n      'auth': localStorage.getItem('vmisJwt')\n    }\n  };\n  axios(config).then(function (response) {\n    if (response.data.message === 'Unautorized') {\n      setIsTokenValid(false);\n    }\n  }).catch(function (error) {\n    console.log(error);\n    setIsTokenValid(false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isTokenValid ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : window.location.reload() || localStorage.removeItem('vmisJwt')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PrivateRoute, \"S2Krn40bjKDEYWocDFMlul/JyzM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Data/PrivateRoute.js"],"names":["React","useState","Route","Redirect","UseAuth","axios","PrivateRoute","component","Component","rest","isTokenValid","setIsTokenValid","config","method","url","headers","localStorage","getItem","then","response","data","message","catch","error","console","log","props","window","location","reload","removeItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AACrD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,MAAIW,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,GAAG,EAAE,2CAFI;AAGTC,IAAAA,OAAO,EAAE;AACL,cAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAHA,GAAb;AAOAZ,EAAAA,KAAK,CAACO,MAAD,CAAL,CACKM,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,QAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAAwB,aAA3B,EAAyC;AACrCV,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,GALL,EAMKW,KANL,CAMW,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAZ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GATL;AAUA,sBACI;AAAA,cAEKD,YAAY,gBACT,QAAC,KAAD,OACQD,IADR;AAEI,MAAA,MAAM,EAAEiB,KAAK,IACT,oBACI,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALhB;AAAA;AAAA;AAAA;AAAA,YADS,GAMwCC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,MAA4Bb,YAAY,CAACc,UAAb,CAAwB,SAAxB;AARrF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/BQxB,Y;;KAAAA,Y;AAgCT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UseAuth } from \"../Context/UseAuth\";\nimport axios from 'axios';\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const [isTokenValid, setIsTokenValid] = useState(true);\n    var config = {\n        method: 'get',\n        url: 'https://dev.hisprwanda.org/vmis/api/users',\n        headers: {\n            'auth': localStorage.getItem('vmisJwt')\n        }\n    };\n    axios(config)\n        .then(function (response) {\n            if(response.data.message==='Unautorized'){\n                setIsTokenValid(false);\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n            setIsTokenValid(false);\n        });\n    return (\n        <div>\n                        {/* {isTokenValid ? changed it to true for alowwing my self to log in */}\n            {isTokenValid ?\n                <Route\n                    {...rest}\n                    render={props =>\n                        true ? (\n                            <Component {...props} />) : (\n                                <Redirect to=\"/login\" />)} /> : (window.location.reload() || localStorage.removeItem('vmisJwt'))}\n        </div>\n    )\n}\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}