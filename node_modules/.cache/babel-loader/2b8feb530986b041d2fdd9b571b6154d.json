{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\n\nconst DistributionList = props => {\n  _s();\n\n  const [message, setMessage] = useState(null);\n  const [getDistributions, setGetDistributions] = useState(null);\n  const {\n    value: damageType,\n    bind: bindDamageType,\n    reset: resetDamageType\n  } = useInput('');\n  const {\n    value: quantity,\n    bind: bindQuantity,\n    reset: resetQuantity\n  } = useInput('');\n  const {\n    value: comment,\n    bind: bindComment,\n    reset: resetComment\n  } = useInput('');\n  const {\n    value: pcv,\n    bind: bindPcv,\n    reset: resetPcv\n  } = useInput('');\n  const [acknowledgementList, acknowledgememt] = [[]];\n  const [distributionId, setDistributionId] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:8765/api/distribution/acknowledge', {\n      headers: {\n        'auth': localStorage.getItem('vmisJwt')\n      }\n    }).then(results => {\n      setGetDistributions(results.data);\n    }).catch(() => setMessage({\n      type: 'text-center alert alert-success m-2',\n      message: 'No acknowledgememt list'\n    }));\n  }, [props.message]);\n\n  const handleAcknowledgmentList = e => {\n    e.preventDefault(); // if (constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)) {\n    //     acknowledgementList = constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)\n    // }\n    // else {\n    //     acknowledgementList.push({\n    //         \"vaccineid\": selectedVaccine.vaccineId,\n    //         \"vaccineName\": selectedVaccine.vaccineName,\n    //         \"batchNumber\": batchNumber,\n    //         \"pcvStatus\": pcv,\n    //         \"vaccineQuantity\": quantity,\n    //         \"comment\": comment\n    //     })\n    // }\n    // setSelectedVaccine('');\n    // resetVaccineSelector.value = \"\"\n    // resetQuantity()\n    // resetBatchNumber()\n    // resetPcv();\n    // resetComment()\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getDistributions ? Object.keys(getDistributions).map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-title\",\n              children: [\"Distribution From \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: getDistributions[post][0].distribution_origin_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 90\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: () => {\n                setDistributionId(post);\n                distributeVaccine.splice(0, distributeVaccine.length);\n                setMessage('');\n                setRequestSource({\n                  orgunitname: requestData[post][0].from_source_orgunit_name,\n                  orgunitid: requestData[post][0].from_source_orgunit_id\n                });\n              },\n              disabled: disabled,\n              children: \"Check this request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: \"nothing to acknowledge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DistributionList, \"uAzTDDA4lz31Rfhm36nonUPiwjs=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = DistributionList;\nexport default DistributionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistributionList\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js"],"names":["React","useEffect","useState","axios","Card","useInput","constraintCheck","DistributionList","props","message","setMessage","getDistributions","setGetDistributions","value","damageType","bind","bindDamageType","reset","resetDamageType","quantity","bindQuantity","resetQuantity","comment","bindComment","resetComment","pcv","bindPcv","resetPcv","acknowledgementList","acknowledgememt","distributionId","setDistributionId","get","headers","localStorage","getItem","then","results","data","catch","type","handleAcknowledgmentList","e","preventDefault","Object","keys","map","post","index","distribution_origin_name","distributeVaccine","splice","length","setRequestSource","orgunitname","requestData","from_source_orgunit_name","orgunitid","from_source_orgunit_id","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nconst DistributionList = (props) => {\n    const [message, setMessage] = useState(null)\n    const [getDistributions, setGetDistributions] = useState(null)\n    const { value: damageType, bind: bindDamageType, reset: resetDamageType } = useInput('');\n    const { value: quantity, bind: bindQuantity, reset: resetQuantity } = useInput('');\n    const { value: comment, bind: bindComment, reset: resetComment } = useInput('');\n    const { value: pcv, bind: bindPcv, reset: resetPcv } = useInput('');\n    const [acknowledgementList, acknowledgememt] = [[],]\n    const [distributionId, setDistributionId] = useState(null)\n    useEffect(() => {\n        axios.get('http://localhost:8765/api/distribution/acknowledge', {\n            headers: {\n                'auth': localStorage.getItem('vmisJwt')\n            }\n        }).then(results => {\n            setGetDistributions(results.data)\n        }).catch(() =>\n            setMessage({ type: 'text-center alert alert-success m-2', message: 'No acknowledgememt list' })\n        )\n    }, [props.message])\n    const handleAcknowledgmentList = (e) => {\n        e.preventDefault()\n        // if (constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)) {\n        //     acknowledgementList = constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)\n        // }\n        // else {\n        //     acknowledgementList.push({\n        //         \"vaccineid\": selectedVaccine.vaccineId,\n        //         \"vaccineName\": selectedVaccine.vaccineName,\n        //         \"batchNumber\": batchNumber,\n        //         \"pcvStatus\": pcv,\n        //         \"vaccineQuantity\": quantity,\n        //         \"comment\": comment\n        //     })\n        // }\n        // setSelectedVaccine('');\n        // resetVaccineSelector.value = \"\"\n        // resetQuantity()\n        // resetBatchNumber()\n        // resetPcv();\n        // resetComment()\n    }\n    return (<div>\n        {getDistributions ?\n            Object.keys(getDistributions).map((post, index) => {\n                return (\n                    <div key={index}>\n                        <hr />\n                        <div className=\"card\" key={index}>\n                            <div className=\"card-body\" key={index}>\n                                <h6 className=\"card-title\" key={index}>Distribution From <b key={index}>{getDistributions[post][0].distribution_origin_name}</b></h6>\n                                <button className=\"btn btn-info\" onClick={() => { setDistributionId(post); distributeVaccine.splice(0, distributeVaccine.length); setMessage(''); setRequestSource({ orgunitname: requestData[post][0].from_source_orgunit_name, orgunitid: requestData[post][0].from_source_orgunit_id }); }} disabled={disabled}>Check this request</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n            : <div className=\"alert alert-info\">nothing to acknowledge</div>}\n    </div >);\n}\n\nexport default DistributionList;"]},"metadata":{},"sourceType":"module"}