{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\n\nfunction Chart(props) {\n  _s();\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const data = {\n    labels: months,\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  }; // labels\n\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n\n  if (config) {\n    if (config.data) {\n      if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n        for (const i in months) {\n          if (vaccineStock[i]) {\n            const monthlyElement = vaccineStock[i];\n\n            if (parseInt(i) === months.indexOf(months[i])) {\n              console.log(monthlyElement);\n              data.datasets.push({\n                label: Array.of(monthlyElement.vaccineName),\n                data: Array.of(monthlyElement.quantity),\n                backgroundColor: Array.of(monthlyElement.color),\n                borderColor: Array.of(monthlyElement.borderColor),\n                borderWidth: 1\n              });\n            }\n          } else {// for (const j in monthlyElement) {\n            //     if (monthlyElement.hasOwnProperty(j)) {\n            //         data.datasets.push({\n            //             label: Array.of(monthlyElement.vaccineName),\n            //             data: data.push(null),\n            //             backgroundColor: Array.of(monthlyElement.color),\n            //             borderColor: Array.of(monthlyElement.borderColor),\n            //             borderWidth: 1\n            //         })\n            //     }\n            // }\n          }\n        }\n      }\n    }\n  }\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n      data.datasets.push({\n        label: [element.vaccineName],\n        data: [element.quantity],\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n    }\n  }\n\n  console.log();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      title: \"Stock status\",\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","Chart","props","months","data","labels","label","datasets","options","scales","yAxes","ticks","beginAtZero","config","requestOrgunitId","date","method","url","headers","localStorage","getItem","orgunit","vaccineStock","setVaccineStock","then","res","catch","error","console","log","hasOwnProperty","length","i","monthlyElement","parseInt","indexOf","push","Array","of","vaccineName","quantity","backgroundColor","color","borderColor","borderWidth","element","Object","keys","map","key","index","headerColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nfunction Chart(props) {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const data = {\n        labels: months,\n        label: [\"Stock status\"],\n        datasets: [],\n\n    };\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n    // labels\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    const [vaccineStock, setVaccineStock] = useState(null)\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n    if (config) {\n        if (config.data) {\n            if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n                for (const i in months) {\n                    if (vaccineStock[i]) {\n                        const monthlyElement = vaccineStock[i];\n                        if (parseInt(i) === months.indexOf(months[i])) {\n                            console.log(monthlyElement);\n                            data.datasets.push({\n                                label: Array.of(monthlyElement.vaccineName),\n                                data: Array.of(monthlyElement.quantity),\n                                backgroundColor: Array.of(monthlyElement.color),\n                                borderColor: Array.of(monthlyElement.borderColor),\n                                borderWidth: 1\n                            })\n                        }\n                    } else {\n                        // for (const j in monthlyElement) {\n                        //     if (monthlyElement.hasOwnProperty(j)) {\n                        //         data.datasets.push({\n                        //             label: Array.of(monthlyElement.vaccineName),\n                        //             data: data.push(null),\n                        //             backgroundColor: Array.of(monthlyElement.color),\n                        //             borderColor: Array.of(monthlyElement.borderColor),\n                        //             borderWidth: 1\n                        //         })\n                        //     }\n                        // }\n                    }\n                }\n            }\n        }\n    }\n\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            data.datasets.push({\n                label: [element.vaccineName],\n                data: [element.quantity],\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n        }\n    }\n    console.log()\n    return (\n        <div className='container'>\n            <Bar data={data} title='Stock status' options={options} />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}