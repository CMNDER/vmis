{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form, Row, Col, Card } from 'react-bootstrap';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown';\nimport { HttpRequests } from '../Data/HttpRequest';\nlet [acknowledgementList, acknowledgementData] = [[], null];\n\nconst Distributions = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const config = {\n    method: 'get',\n    url: 'http://localhost:8765/api/distribution/acknowledge',\n    headers: {\n      'auth': localStorage.getItem('vmisJwt')\n    }\n  };\n  let distributionData = HttpRequests(config);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: distributionData !== undefined && distributionData.data ? /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 72\n      }, this) : distributionData !== undefined && distributionData.loading ? /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 168\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 163\n      }, this) : distributionData !== undefined && distributionData.error ? /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 273\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 268\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: \"No un Acknowledged Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 349\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 344\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Distributions, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c = Distributions;\nexport default Distributions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Distributions\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js"],"names":["React","useEffect","useState","axios","Spinner","Button","Form","Row","Col","Card","useInput","constraintCheck","VaccinesList","HttpRequests","acknowledgementList","acknowledgementData","Distributions","props","message","setMessage","config","method","url","headers","localStorage","getItem","distributionData","undefined","data","loading","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,IAA1C,QAAsD,iBAAtD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,IAAI,CAACC,mBAAD,EAAsBC,mBAAtB,IAA6C,CAAC,EAAD,EAAK,IAAL,CAAjD;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMkB,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAE,oDAFM;AAGXC,IAAAA,OAAO,EAAE;AACL,cAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAHE,GAAf;AAOA,MAAIC,gBAAgB,GAAGb,YAAY,CAACO,MAAD,CAAnC;AACA,sBAAQ;AAAA,2BACJ,QAAC,GAAD;AAAA,gBACKM,gBAAgB,KAAKC,SAArB,IAAkCD,gBAAgB,CAACE,IAAnD,gBAA0D,QAAC,GAAD;AAAA,+BAAK,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA1D,GAAwFF,gBAAgB,KAAKC,SAArB,IAAkCD,gBAAgB,CAACG,OAAnD,gBAA6D,QAAC,GAAD;AAAA,+BAAK,QAAC,OAAD;AAAS,UAAA,SAAS,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA7D,GAA2GH,gBAAgB,KAAKC,SAArB,IAAkCD,gBAAgB,CAACI,KAAnD,gBAA2D,QAAC,GAAD;AAAA,+BAAK;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA3D,gBAAuI,QAAC,GAAD;AAAA,+BAAK;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAD/U;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH,CAfD;;GAAMd,a;;KAAAA,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form, Row, Col, Card } from 'react-bootstrap'\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown'\nimport { HttpRequests } from '../Data/HttpRequest';\nlet [acknowledgementList, acknowledgementData] = [[], null]\nconst Distributions = (props) => {\n    const [message, setMessage] = useState('')\n    const config = {\n        method: 'get',\n        url: 'http://localhost:8765/api/distribution/acknowledge',\n        headers: {\n            'auth': localStorage.getItem('vmisJwt')\n        }\n    };\n    let distributionData = HttpRequests(config)\n    return (<div>\n        <Row>\n            {distributionData !== undefined && distributionData.data ? <Col><Card>Yes</Card></Col> : distributionData !== undefined && distributionData.loading ? <Col><Spinner animation={\"border\"} /></Col> : distributionData !== undefined && distributionData.error ? <Col><div className=\"alert alert-danger\">Something went wrong</div></Col> : <Col><div className=\"alert alert-info\">No un Acknowledged Distribution</div></Col>}\n        </Row>\n    </div>)\n}\n\nexport default Distributions;"]},"metadata":{},"sourceType":"module"}