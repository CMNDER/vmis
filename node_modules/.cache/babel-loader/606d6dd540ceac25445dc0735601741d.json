{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport Chart from \"react-apexcharts\";\n\nfunction ChartComponent(props) {\n  _s();\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let data = {\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  }; // labels\n\n  const dataChart = {\n    series: [],\n    options: {\n      chart: {\n        type: 'bar',\n        height: 350\n      },\n      colors: [\"#56D79899\", \"#EEFF26B3\", \"#FA05119E\"],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '55%',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n      },\n      yaxis: {\n        title: {\n          text: 'Quantity'\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val;\n          }\n        }\n      }\n    }\n  };\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n\n    if (props.date.length < 3 && props.date === \"6\") {\n      let today = new Date();\n      let year = today.getFullYear();\n      let month = today.getMonth();\n      let i = 0;\n      let lastSixMonths = [];\n      let unSortedMonths = [];\n\n      do {\n        if (month < 0) {\n          month = 11;\n          year--;\n        }\n\n        month--;\n        unSortedMonths.push(months[month]);\n        i++;\n      } while (i < 6);\n\n      for (let j = unSortedMonths.length - 1; j >= 0; j--) {\n        lastSixMonths.push(unSortedMonths[j]);\n      }\n\n      data = {\n        labels: lastSixMonths,\n        label: [\"Stock status\"],\n        datasets: []\n      };\n    } else if (props.date === \"12\") {\n      data = {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        label: [\"Stock status\"],\n        datasets: []\n      };\n    }\n  } else if (props.date && props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n  let [quantities, vaccineNames, colors, borderColors] = [[], [], [], []]; // if (config) {\n  //     if (config.data) {\n  //         if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n  //             for (let month in months) {\n  //                 if (vaccineStock[month]) {\n  //                     for (let i in vaccineStock[month]) {\n  //                         vaccineNames.push(vaccineStock[month][i].vaccineName)\n  //                         quantities.push(vaccineStock[month][i].quantity)\n  //                         colors.push(vaccineStock[month][i].color)\n  //                         borderColors.push(vaccineStock[month][i].borderColor)\n  //                     }\n  //                     data.datasets.push({\n  //                         label: vaccineNames,\n  //                         data: quantities,\n  //                         backgroundColor: colors,\n  //                         borderColor: borderColors,\n  //                         borderWidth: 1\n  //                     })\n  //                     quantities = [];\n  //                     vaccineNames = [];\n  //                     colors = [];\n  //                     borderColors = [];\n  //                 } else {\n  //                     quantities.push(null)\n  //                     vaccineNames.push(null)\n  //                     colors.push(null)\n  //                     borderColors.push(null)\n  //                 }\n  //             }\n  //             console.log(data);\n  //         }\n  //     }\n  // }\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n      data.datasets.push({\n        label: [element.vaccineName],\n        data: [element.quantity],\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n      dataChart.series.push({\n        name: element.vaccineName,\n        data: element.quantity\n      });\n      console.log(dataChart.series);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      options: dataChart.options,\n      series: dataChart.series,\n      type: \"bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartComponent, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = ChartComponent;\nexport default ChartComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","Chart","ChartComponent","props","vaccineStock","setVaccineStock","months","data","label","datasets","options","scales","yAxes","ticks","beginAtZero","dataChart","series","chart","type","height","colors","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","config","requestOrgunitId","date","method","url","headers","localStorage","getItem","orgunit","length","today","Date","year","getFullYear","month","getMonth","i","lastSixMonths","unSortedMonths","push","j","labels","then","res","catch","error","console","log","quantities","vaccineNames","borderColors","hasOwnProperty","element","vaccineName","quantity","backgroundColor","color","borderColor","borderWidth","name","Object","keys","map","key","index","headerColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport Chart from \"react-apexcharts\";\nfunction ChartComponent(props) {\n    const [vaccineStock, setVaccineStock] = useState(null)\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let data = {\n        label: [\"Stock status\"],\n        datasets: [],\n    };\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n    // labels\n    const dataChart = {\n\n        series: [],\n        options: {\n            chart: {\n                type: 'bar',\n                height: 350\n            },\n            colors: [\"#56D79899\", \"#EEFF26B3\", \"#FA05119E\"],\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: '55%',\n                    endingShape: 'rounded'\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n            },\n            yaxis: {\n                title: {\n                    text: 'Quantity'\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            tooltip: {\n                y: {\n                    formatter: function (val) {\n                        return val\n                    }\n                }\n            }\n        },\n    };\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n        if (props.date.length < 3 && props.date === \"6\") {\n            let today = new Date();\n            let year = today.getFullYear();\n            let month = today.getMonth();\n            let i = 0;\n            let lastSixMonths = []\n            let unSortedMonths = []\n            do {\n                if (month < 0) {\n                    month = 11;\n                    year--;\n                }\n                month--;\n                unSortedMonths.push(months[month])\n                i++;\n            } while (i < 6);\n            for (let j = unSortedMonths.length - 1; j >= 0; j--) {\n                lastSixMonths.push(unSortedMonths[j])\n            }\n            data = {\n                labels: lastSixMonths,\n                label: [\"Stock status\"],\n                datasets: [],\n\n            };\n        }\n        else if (props.date === \"12\") {\n            data = {\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n                label: [\"Stock status\"],\n                datasets: [],\n            };\n        }\n\n    }\n    else if (props.date && props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n    let [quantities, vaccineNames, colors, borderColors] = [[], [], [], []]\n    // if (config) {\n    //     if (config.data) {\n    //         if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n    //             for (let month in months) {\n    //                 if (vaccineStock[month]) {\n    //                     for (let i in vaccineStock[month]) {\n    //                         vaccineNames.push(vaccineStock[month][i].vaccineName)\n    //                         quantities.push(vaccineStock[month][i].quantity)\n    //                         colors.push(vaccineStock[month][i].color)\n    //                         borderColors.push(vaccineStock[month][i].borderColor)\n    //                     }\n    //                     data.datasets.push({\n    //                         label: vaccineNames,\n    //                         data: quantities,\n    //                         backgroundColor: colors,\n    //                         borderColor: borderColors,\n    //                         borderWidth: 1\n    //                     })\n\n    //                     quantities = [];\n    //                     vaccineNames = [];\n    //                     colors = [];\n    //                     borderColors = [];\n    //                 } else {\n    //                     quantities.push(null)\n    //                     vaccineNames.push(null)\n    //                     colors.push(null)\n    //                     borderColors.push(null)\n    //                 }\n    //             }\n    //             console.log(data);\n    //         }\n    //     }\n    // }\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            data.datasets.push({\n                label: [element.vaccineName],\n                data: [element.quantity],\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n            dataChart.series.push({\n                name: element.vaccineName,\n                data: element.quantity\n            })\n            console.log(dataChart.series)\n        }\n    }\n\n    return (\n        <div className='container'>\n            {/* <Bar data={data} title='Stock status' options={options} /> */}\n            <Chart options={dataChart.options} series={dataChart.series} type=\"bar\" />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ChartComponent"]},"metadata":{},"sourceType":"module"}