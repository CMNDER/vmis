{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\n\nconst DistributionList = props => {\n  _s();\n\n  const [message, setMessage] = useState(null);\n  const [getDistributions, setGetDistributions] = useState(null); // const { value: damageType, bind: bindDamageType, reset: resetDamageType } = useInput('');\n  // const { value: quantity, bind: bindQuantity, reset: resetQuantity } = useInput('');\n  // const { value: comment, bind: bindComment, reset: resetComment } = useInput('');\n  // const { value: pcv, bind: bindPcv, reset: resetPcv } = useInput('');\n\n  const [acknowledgementList, acknowledgememt] = [[], []];\n  const [distributionId, setDistributionId] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [requestSource, setRequestSource] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:8765/api/distribution/acknowledge', {\n      headers: {\n        'auth': localStorage.getItem('vmisJwt')\n      }\n    }).then(results => {\n      setGetDistributions(results.data);\n    }).catch(() => setMessage({\n      type: 'text-center alert alert-success m-2',\n      message: 'No acknowledgememt list'\n    }));\n  }, [props.message]);\n\n  const handleAcknowledgmentList = e => {\n    e.preventDefault(); // if (constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)) {\n    //     acknowledgementList = constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)\n    // }\n    // else {\n    //     acknowledgementList.push({\n    //         \"vaccineid\": selectedVaccine.vaccineId,\n    //         \"vaccineName\": selectedVaccine.vaccineName,\n    //         \"batchNumber\": batchNumber,\n    //         \"pcvStatus\": pcv,\n    //         \"vaccineQuantity\": quantity,\n    //         \"comment\": comment\n    //     })\n    // }\n    // setSelectedVaccine('');\n    // resetVaccineSelector.value = \"\"\n    // resetQuantity()\n    // resetBatchNumber()\n    // resetPcv();\n    // resetComment()\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getDistributions ? Object.keys(getDistributions).map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-title\",\n              children: [\"Distribution From \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: getDistributions[post][0].distribution_origin_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 90\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: () => {\n                setDistributionId(post);\n                acknowledgementList.splice(0, acknowledgementList.length);\n                setMessage('');\n                setRequestSource({\n                  orgunitname: getDistributions[post][0].from_source_orgunit_name,\n                  orgunitid: getDistributions[post][0].distribution_origin_id\n                });\n              },\n              disabled: disabled,\n              children: \"Confirm Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: \"nothing to acknowledge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DistributionList, \"UjYkt+GzDaf2f2IHNgjxxvy3q9Q=\");\n\n_c = DistributionList;\nexport default DistributionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistributionList\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js"],"names":["React","useEffect","useState","axios","useInput","constraintCheck","DistributionList","props","message","setMessage","getDistributions","setGetDistributions","acknowledgementList","acknowledgememt","distributionId","setDistributionId","disabled","setDisabled","requestSource","setRequestSource","get","headers","localStorage","getItem","then","results","data","catch","type","handleAcknowledgmentList","e","preventDefault","Object","keys","map","post","index","distribution_origin_name","splice","length","orgunitname","from_source_orgunit_name","orgunitid","distribution_origin_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nconst DistributionList = (props) => {\n    const [message, setMessage] = useState(null)\n    const [getDistributions, setGetDistributions] = useState(null)\n    // const { value: damageType, bind: bindDamageType, reset: resetDamageType } = useInput('');\n    // const { value: quantity, bind: bindQuantity, reset: resetQuantity } = useInput('');\n    // const { value: comment, bind: bindComment, reset: resetComment } = useInput('');\n    // const { value: pcv, bind: bindPcv, reset: resetPcv } = useInput('');\n    const [acknowledgementList, acknowledgememt] = [[], []]\n    const [distributionId, setDistributionId] = useState(null)\n    const [disabled, setDisabled] = useState(false)\n    const [requestSource, setRequestSource] = useState('')\n\n    useEffect(() => {\n        axios.get('http://localhost:8765/api/distribution/acknowledge', {\n            headers: {\n                'auth': localStorage.getItem('vmisJwt')\n            }\n        }).then(results => {\n            setGetDistributions(results.data)\n        }).catch(() =>\n            setMessage({ type: 'text-center alert alert-success m-2', message: 'No acknowledgememt list' })\n        )\n    }, [props.message])\n    const handleAcknowledgmentList = (e) => {\n        e.preventDefault()\n        // if (constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)) {\n        //     acknowledgementList = constraintCheck(acknowledgementList, selectedVaccine.vaccineId, quantity)\n        // }\n        // else {\n        //     acknowledgementList.push({\n        //         \"vaccineid\": selectedVaccine.vaccineId,\n        //         \"vaccineName\": selectedVaccine.vaccineName,\n        //         \"batchNumber\": batchNumber,\n        //         \"pcvStatus\": pcv,\n        //         \"vaccineQuantity\": quantity,\n        //         \"comment\": comment\n        //     })\n        // }\n        // setSelectedVaccine('');\n        // resetVaccineSelector.value = \"\"\n        // resetQuantity()\n        // resetBatchNumber()\n        // resetPcv();\n        // resetComment()\n    }\n    return (<div>\n        {getDistributions ?\n            Object.keys(getDistributions).map((post, index) => {\n                return (\n                    <div key={index}>\n                        <hr />\n                        <div className=\"card\" key={index}>\n                            <div className=\"card-body\" key={index}>\n                                <h6 className=\"card-title\" key={index}>Distribution From <b key={index}>{getDistributions[post][0].distribution_origin_name}</b></h6>\n                                <button className=\"btn btn-info\" onClick={() => { setDistributionId(post); acknowledgementList.splice(0, acknowledgementList.length); setMessage(''); setRequestSource({ orgunitname: getDistributions[post][0].from_source_orgunit_name, orgunitid: getDistributions[post][0].distribution_origin_id }); }} disabled={disabled}>Confirm Distribution</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n            : <div className=\"alert alert-info\">nothing to acknowledge</div>}\n    </div >);\n}\n\nexport default DistributionList;"]},"metadata":{},"sourceType":"module"}