{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form } from 'react-bootstrap';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown';\nlet [acknowledgementList, acknowledgementData] = [[], null];\n\nconst DistributionList = props => {\n  _s();\n\n  const [message, setMessage] = useState(null);\n  const [getDistributions, setGetDistributions] = useState({\n    data: null,\n    loading: false,\n    error: false\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [requestSource, setRequestSource] = useState('');\n  const [distributionId, setDistributionId] = useState('');\n  const [vaccine, setVaccine] = useState('');\n  const [quantityRequested, setQuantityRequested] = useState('');\n  const {\n    value: quantity,\n    bind: bindQuantity,\n    reset: resetQuantity\n  } = useInput('');\n  const {\n    value: batchNumber,\n    bind: bindBatchNumber,\n    reset: resetBatchNumber\n  } = useInput('');\n  const {\n    value: pcvValue,\n    bind: bindPcvValue,\n    reset: resetPcvValue\n  } = useInput('');\n  const {\n    value: comment,\n    bind: bindComment,\n    reset: resetComment\n  } = useInput('');\n  const [inputError, setInputError] = useState('');\n  const [Deleted, setDeleted] = useState(false);\n  const [distributed, setDistributed] = useState(0);\n  const [spin, setSpin] = useState('');\n  const [requestData, setRequestData] = useState('');\n  const [requestId, setRequestId] = useState(null);\n  useEffect(() => {\n    setGetDistributions({\n      data: null,\n      loading: true,\n      error: false\n    });\n    axios.get('http://localhost:8765/api/distribution/acknowledge', {\n      headers: {\n        'auth': localStorage.getItem('vmisJwt')\n      }\n    }).then(results => {\n      setGetDistributions({\n        data: results.data,\n        loading: false,\n        error: false\n      });\n    }).catch(() => {\n      setGetDistributions({\n        data: null,\n        loading: false,\n        error: true\n      });\n      setMessage({\n        type: 'text-center alert alert-success m-2',\n        message: 'No acknowledgememt list'\n      });\n    });\n  }, [props.dependency]);\n\n  const vaccineHandover = vac => {\n    const mySelectElement = document.getElementById(\"vaccineSelectionDropdown\");\n    mySelectElement.value = vac.vacId;\n    mySelectElement.dispatchEvent(new MouseEvent('change', {\n      bubbles: true,\n      cancelable: true,\n      view: window\n    }));\n  };\n\n  const handleAddToList = evt => {\n    evt.preventDefault();\n\n    if (vaccine && quantityRequested && quantity) {\n      acknowledgementList.push({\n        \"vaccineName\": vaccine.vaccineName,\n        \"vaccineid\": vaccine.vaccineId,\n        \"itemRequestedQuantity\": quantityRequested,\n        \"vaccineQuantity\": quantity,\n        \"batchNumber\": batchNumber,\n        \"comment\": comment,\n        \"pcvStatus\": pcvValue\n      });\n      setVaccine('');\n      document.getElementById(\"vaccineSelectionDropdown\").value = \"\";\n      resetQuantity();\n      resetBatchNumber();\n      resetComment();\n      resetPcvValue();\n      setInputError('');\n    } else {\n      setInputError('No vaccine to acknowledge');\n    }\n  };\n\n  const deleteDistribution = e => {\n    acknowledgementList.splice(e, 1);\n    setInterval(() => {\n      setDeleted(true);\n    }, 50);\n    setDeleted(false);\n  };\n\n  const handleAcknowledgmentApiRequest = () => {\n    acknowledgementData = {\n      acknowledgedItems: acknowledgementList\n    };\n    const config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/acknowledge',\n      data: acknowledgementData,\n      headers: {\n        'auth': localStorage.getItem('vmisJwt')\n      }\n    };\n    setDisabled(true);\n    setSpin('border');\n    axios(config).then(() => {\n      setDisabled(false);\n      setSpin('');\n      acknowledgementList.splice(0, acknowledgementList.length);\n      acknowledgementData = {};\n      setMessage({\n        type: 'text-center alert alert-success m-2',\n        message: 'Acknowledgement successful'\n      });\n      setTimeout(() => {\n        setMessage('');\n      }, 5000);\n    }).catch(e => {\n      if (e.response.status === 500 && e.response.data === 401) {\n        setDisabled(false); // setSpin('')\n\n        setMessage({\n          type: 'text-center alert alert-danger m-2',\n          message: 'Acknowledgement failed Quantity is inadequate'\n        });\n        setTimeout(() => {\n          setMessage('');\n        }, 5000);\n      } else if (e.response.status === 500) {\n        setDisabled(false);\n        setSpin('');\n        setMessage({\n          type: 'text-center alert alert-danger m-2',\n          message: 'Acknowledgement failed'\n        });\n        setTimeout(() => {\n          setMessage('');\n        }, 5000);\n      } else if (e.response.status === 404) {\n        setDisabled(false);\n        setSpin('');\n        setMessage({\n          type: 'text-center alert alert-danger m-2',\n          message: 'Acknowledgement failed Batch Number not found'\n        });\n        setTimeout(() => {\n          setMessage('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DistributionList, \"36ye8PiyzSM/gmBhuZmRRJ0d+sM=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = DistributionList;\nexport default DistributionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistributionList\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js"],"names":["React","useEffect","useState","axios","Spinner","Button","Form","useInput","constraintCheck","VaccinesList","acknowledgementList","acknowledgementData","DistributionList","props","message","setMessage","getDistributions","setGetDistributions","data","loading","error","disabled","setDisabled","requestSource","setRequestSource","distributionId","setDistributionId","vaccine","setVaccine","quantityRequested","setQuantityRequested","value","quantity","bind","bindQuantity","reset","resetQuantity","batchNumber","bindBatchNumber","resetBatchNumber","pcvValue","bindPcvValue","resetPcvValue","comment","bindComment","resetComment","inputError","setInputError","Deleted","setDeleted","distributed","setDistributed","spin","setSpin","requestData","setRequestData","requestId","setRequestId","get","headers","localStorage","getItem","then","results","catch","type","dependency","vaccineHandover","vac","mySelectElement","document","getElementById","vacId","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","handleAddToList","evt","preventDefault","push","vaccineName","vaccineId","deleteDistribution","e","splice","setInterval","handleAcknowledgmentApiRequest","acknowledgedItems","config","method","url","length","setTimeout","response","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form } from 'react-bootstrap'\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown'\nlet [acknowledgementList, acknowledgementData] = [[], null]\nconst DistributionList = (props) => {\n    const [message, setMessage] = useState(null)\n    const [getDistributions, setGetDistributions] = useState({\n        data: null,\n        loading: false,\n        error: false\n    })\n    const [disabled, setDisabled] = useState(false)\n    const [requestSource, setRequestSource] = useState('')\n    const [distributionId, setDistributionId] = useState('')\n    const [vaccine, setVaccine] = useState('');\n    const [quantityRequested, setQuantityRequested] = useState('')\n    const { value: quantity, bind: bindQuantity, reset: resetQuantity } = useInput('');\n    const { value: batchNumber, bind: bindBatchNumber, reset: resetBatchNumber } = useInput('');\n    const { value: pcvValue, bind: bindPcvValue, reset: resetPcvValue } = useInput('');\n    const { value: comment, bind: bindComment, reset: resetComment } = useInput('');\n    const [inputError, setInputError] = useState('')\n    const [Deleted, setDeleted] = useState(false)\n    const [distributed, setDistributed] = useState(0)\n    const [spin, setSpin] = useState('')\n    const [requestData, setRequestData] = useState('')\n    const [requestId, setRequestId] = useState(null)\n    useEffect(() => {\n        setGetDistributions({\n            data: null,\n            loading: true,\n            error: false\n        });\n        axios.get('http://localhost:8765/api/distribution/acknowledge', {\n            headers: {\n                'auth': localStorage.getItem('vmisJwt')\n            }\n        }).then(results => {\n            setGetDistributions({\n                data: results.data,\n                loading: false,\n                error: false\n            })\n        }).catch(() => {\n            setGetDistributions({\n                data: null,\n                loading: false,\n                error: true\n            })\n            setMessage({ type: 'text-center alert alert-success m-2', message: 'No acknowledgememt list' })\n        })\n    }, [props.dependency])\n    const vaccineHandover = (vac) => {\n        const mySelectElement = document.getElementById(\"vaccineSelectionDropdown\");\n        mySelectElement.value = vac.vacId\n        mySelectElement.dispatchEvent(\n            new MouseEvent('change', {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n            }));\n    }\n    const handleAddToList = (evt) => {\n        evt.preventDefault();\n        if (vaccine && quantityRequested && quantity) {\n            acknowledgementList.push({\n                \"vaccineName\": vaccine.vaccineName,\n                \"vaccineid\": vaccine.vaccineId,\n                \"itemRequestedQuantity\": quantityRequested,\n                \"vaccineQuantity\": quantity,\n                \"batchNumber\": batchNumber,\n                \"comment\": comment,\n                \"pcvStatus\": pcvValue,\n            });\n            setVaccine('');\n            document.getElementById(\"vaccineSelectionDropdown\").value = \"\";\n            resetQuantity();\n            resetBatchNumber();\n            resetComment();\n            resetPcvValue();\n            setInputError('')\n        }\n        else {\n            setInputError('No vaccine to acknowledge')\n        }\n    }\n    const deleteDistribution = (e) => {\n        acknowledgementList.splice(e, 1)\n        setInterval(() => {\n            setDeleted(true)\n        }, 50);\n        setDeleted(false)\n    }\n    const handleAcknowledgmentApiRequest = () => {\n        acknowledgementData = {\n            acknowledgedItems: acknowledgementList\n        }\n        const config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/acknowledge',\n            data: acknowledgementData,\n            headers: {\n                'auth': localStorage.getItem('vmisJwt')\n            }\n        };\n        setDisabled(true)\n        setSpin('border')\n        axios(config).then(() => {\n            setDisabled(false)\n            setSpin('')\n            acknowledgementList.splice(0, acknowledgementList.length)\n            acknowledgementData = {}\n            setMessage({ type: 'text-center alert alert-success m-2', message: 'Acknowledgement successful' })\n            setTimeout(() => {\n                setMessage('')\n            }, 5000);\n        }).catch((e) => {\n            if (e.response.status === 500 && e.response.data === 401) {\n                setDisabled(false)\n                // setSpin('')\n                setMessage({ type: 'text-center alert alert-danger m-2', message: 'Acknowledgement failed Quantity is inadequate' })\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000);\n            }\n            else if (e.response.status === 500) {\n                setDisabled(false)\n                setSpin('')\n                setMessage({ type: 'text-center alert alert-danger m-2', message: 'Acknowledgement failed' })\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000);\n            }\n            else if (e.response.status === 404) {\n                setDisabled(false)\n                setSpin('')\n                setMessage({ type: 'text-center alert alert-danger m-2', message: 'Acknowledgement failed Batch Number not found' })\n                setTimeout(() => {\n                    setMessage('')\n                }, 5000);\n            }\n        })\n    }\n    return (<div></div>)\n}\n\nexport default DistributionList;"]},"metadata":{},"sourceType":"module"}