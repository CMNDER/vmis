{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GetOrgUnits } from '../Data/OrgDataHook';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst OrgData = props => {\n  _s();\n\n  const universalUrl = 'https://dev.hisprwanda.org/hiv/api/organisationUnits/';\n  let [provinceData, districtData, subDistrictData, sectorData, hospitalData] = [null, null, null, null, null];\n  let [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender] = [null, null, null, null, null];\n  const levels = ['National', 'Province', 'District', 'Sub District', 'Sector', 'Hospital'];\n  const [province, setProvince] = useState();\n  const [district, setDistrict] = useState();\n  const [subDistrict, setSubDistrict] = useState();\n  const [sector, setSector] = useState();\n  const [hospital, setHospital] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => (setShow(false), [districtData.data, subDistrictData.data, sectorData.data, hospitalData.data] = [null, null, null, null]);\n\n  const handleShow = () => setShow(true);\n\n  const country = GetOrgUnits(`${universalUrl}?paging=false&level=1`);\n  let countryLevelId = null;\n\n  if (country.data !== null) {\n    countryLevelId = country.data.organisationUnits[0].id;\n  }\n\n  provinceData = GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`);\n\n  const handleProvinceChange = event => {\n    setProvince(event.target.value);\n    districtData = subDistrictData = sectorData = hospitalData = null;\n    setDistrict(null);\n    setSubDistrict(null);\n    setSector(null);\n\n    if (ditrictName.data) {\n      props.onChange({\n        orgUnitId: event.target.value,\n        level: 2,\n        orgUnitName: provinceName.data.name\n      });\n    }\n\n    console.log(districtData);\n  };\n\n  const handleDistrictChange = event => {\n    setDistrict(event.target.value);\n    districtData = null;\n    subDistrictData = null;\n    sectorData = null;\n    hospitalData = null;\n    setSubDistrict(null);\n    setSector(null);\n\n    if (ditrictName.data) {\n      props.onChange({\n        orgUnitId: event.target.value,\n        level: 3,\n        orgUnitName: ditrictName.data.name\n      });\n    }\n  };\n\n  const handleSubDistrictChange = event => {\n    setSubDistrict(event.target.value);\n    sectorData = null;\n    hospitalData = null;\n    setSector(null);\n\n    if (subDistrictName.data) {\n      props.onChange({\n        orgUnitId: event.target.value,\n        level: 4,\n        orgUnitName: subDistrictName.data.name\n      });\n    }\n  };\n\n  const handleSectorChange = event => {\n    setSector(event.target.value);\n\n    if (sectorName.data) {\n      props.onChange({\n        orgUnitId: event.target.value,\n        level: 5,\n        orgUnitName: sectorName.data.name\n      });\n    }\n  };\n\n  const handleHospitalChange = event => {\n    setHospital(event.target.value);\n\n    if (hospitalName.data) {\n      props.onChange({\n        orgUnitId: event.target.value,\n        level: 6,\n        orgUnitName: hospitalName.data.name\n      });\n    }\n  };\n\n  districtData = GetOrgUnits(`${universalUrl}${province}?level=1`);\n  subDistrictData = GetOrgUnits(`${universalUrl}${district}?level=1`);\n  sectorData = GetOrgUnits(`${universalUrl}${subDistrict}?level=1`);\n  hospitalData = GetOrgUnits(`${universalUrl}${sector}?level=1`);\n  const provinceName = GetOrgUnits(`${universalUrl}${province}`);\n  const ditrictName = GetOrgUnits(`${universalUrl}${district}`);\n  const subDistrictName = GetOrgUnits(`${universalUrl}${subDistrict}`);\n  const sectorName = GetOrgUnits(`${universalUrl}${sector}`);\n  const hospitalName = GetOrgUnits(`${universalUrl}${hospital}`);\n\n  if (provinceData.data) {\n    provinceRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[provinceData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleProvinceChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), Object.keys(provinceData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: provinceData.data.organisationUnits[key].id,\n            children: provinceData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (districtData.data && districtData !== null) {\n    districtRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[districtData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), Object.keys(districtData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: districtData.data.organisationUnits[key].id,\n            children: districtData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (subDistrictData.data) {\n    subDistrictRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[subDistrictData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSubDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), Object.keys(subDistrictData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subDistrictData.data.organisationUnits[key].id,\n            children: subDistrictData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 77\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (sectorData.data) {\n    sectorRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[sectorData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSectorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), Object.keys(sectorData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sectorData.data.organisationUnits[key].id,\n            children: sectorData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 72\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (hospitalData.error && hospitalData.error_type.response.status === 404) {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Hospitals in your region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (hospitalData.data && sector !== \"\" && subDistrict !== \"\") {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[hospitalData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleHospitalChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), Object.keys(hospitalData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hospitalData.data.organisationUnits[key].id,\n            children: hospitalData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: props.btnColor,\n      onClick: handleShow,\n      style: {\n        borderRadius: \"0\"\n      },\n      children: props.btnName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Organisation Unit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"myForm\",\n          children: [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrgData, \"Ej07K9aTEGYOlK5uHAnmJeRlPVM=\");\n\n_c = OrgData;\nexport default OrgData;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrgData\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js"],"names":["React","useState","GetOrgUnits","Modal","Button","Form","OrgData","props","universalUrl","provinceData","districtData","subDistrictData","sectorData","hospitalData","provinceRender","districtRender","subDistrictRender","sectorRender","hospitalRender","levels","province","setProvince","district","setDistrict","subDistrict","setSubDistrict","sector","setSector","hospital","setHospital","show","setShow","handleClose","data","handleShow","country","countryLevelId","organisationUnits","id","handleProvinceChange","event","target","value","ditrictName","onChange","orgUnitId","level","orgUnitName","provinceName","name","console","log","handleDistrictChange","handleSubDistrictChange","subDistrictName","handleSectorChange","sectorName","handleHospitalChange","hospitalName","Object","keys","map","key","error","error_type","response","status","btnColor","borderRadius","btnName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { GetOrgUnits } from '../Data/OrgDataHook'\nimport { Modal, Button, Form } from 'react-bootstrap'\nconst OrgData = (props) => {\n  const universalUrl = 'https://dev.hisprwanda.org/hiv/api/organisationUnits/'\n  let [provinceData, districtData, subDistrictData, sectorData, hospitalData] = [null, null, null, null, null]\n  let [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender] = [null, null, null, null, null]\n  const levels = ['National', 'Province', 'District', 'Sub District', 'Sector', 'Hospital']\n  const [province, setProvince] = useState()\n  const [district, setDistrict] = useState()\n  const [subDistrict, setSubDistrict] = useState()\n  const [sector, setSector] = useState()\n  const [hospital, setHospital] = useState()\n  const [show, setShow] = useState(false)\n  const handleClose = () => (setShow(false), [districtData.data, subDistrictData.data, sectorData.data, hospitalData.data] = [null, null, null, null])\n  const handleShow = () => setShow(true)\n  const country = GetOrgUnits(`${universalUrl}?paging=false&level=1`)\n  let countryLevelId = null;\n  if (country.data !== null) {\n    countryLevelId = country.data.organisationUnits[0].id;\n  }\n  provinceData = GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`)\n  const handleProvinceChange = (event) => {\n    setProvince(event.target.value)\n    districtData = subDistrictData = sectorData = hospitalData = null\n    setDistrict(null)\n    setSubDistrict(null)\n    setSector(null)\n    if (ditrictName.data) {\n      props.onChange({ orgUnitId: event.target.value, level: 2, orgUnitName: provinceName.data.name })\n    }\n    console.log(districtData)\n  }\n  const handleDistrictChange = (event) => {\n    setDistrict(event.target.value)\n    districtData = null\n    subDistrictData = null\n    sectorData = null\n    hospitalData = null\n    setSubDistrict(null)\n    setSector(null)\n    if (ditrictName.data) {\n      props.onChange({ orgUnitId: event.target.value, level: 3, orgUnitName: ditrictName.data.name })\n    }\n  }\n  const handleSubDistrictChange = (event) => {\n    setSubDistrict(event.target.value)\n    sectorData = null\n    hospitalData = null\n    setSector(null)\n    if (subDistrictName.data) {\n      props.onChange({ orgUnitId: event.target.value, level: 4, orgUnitName: subDistrictName.data.name })\n    }\n  }\n  const handleSectorChange = (event) => {\n    setSector(event.target.value)\n    if (sectorName.data) {\n      props.onChange({ orgUnitId: event.target.value, level: 5, orgUnitName: sectorName.data.name })\n    }\n  }\n  const handleHospitalChange = (event) => {\n    setHospital(event.target.value)\n    if (hospitalName.data) {\n      props.onChange({ orgUnitId: event.target.value, level: 6, orgUnitName: hospitalName.data.name })\n    }\n  }\n  districtData = GetOrgUnits(`${universalUrl}${province}?level=1`)\n  subDistrictData = GetOrgUnits(`${universalUrl}${district}?level=1`)\n  sectorData = GetOrgUnits(`${universalUrl}${subDistrict}?level=1`)\n  hospitalData = GetOrgUnits(`${universalUrl}${sector}?level=1`)\n  const provinceName = GetOrgUnits(`${universalUrl}${province}`)\n  const ditrictName = GetOrgUnits(`${universalUrl}${district}`)\n  const subDistrictName = GetOrgUnits(`${universalUrl}${subDistrict}`)\n  const sectorName = GetOrgUnits(`${universalUrl}${sector}`)\n  const hospitalName = GetOrgUnits(`${universalUrl}${hospital}`)\n\n  if (provinceData.data) {\n    provinceRender =\n      <div>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[provinceData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleProvinceChange}>\n            <option value=\"\">...</option>\n            {Object.keys(provinceData.data.organisationUnits).map(key => <option key={key} value={provinceData.data.organisationUnits[key].id}>{provinceData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (districtData.data && districtData !== null) {\n    districtRender =\n      <div>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[districtData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleDistrictChange}>\n            <option value=\"\">...</option>\n            {Object.keys(districtData.data.organisationUnits).map(key => <option key={key} value={districtData.data.organisationUnits[key].id}>{districtData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (subDistrictData.data) {\n    subDistrictRender =\n      <div>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[subDistrictData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n\n          <Form.Control as=\"select\" custom onChange={handleSubDistrictChange}>\n            <option value=\"\">...</option>\n            {Object.keys(subDistrictData.data.organisationUnits).map(key => <option key={key} value={subDistrictData.data.organisationUnits[key].id}>{subDistrictData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n\n      </div>\n  }\n  if (sectorData.data) {\n    sectorRender =\n      <div>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[sectorData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleSectorChange}>\n            <option value=\"\">...</option>\n            {Object.keys(sectorData.data.organisationUnits).map(key => <option key={key} value={sectorData.data.organisationUnits[key].id}>{sectorData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (hospitalData.error && hospitalData.error_type.response.status === 404) {\n    hospitalRender = <div>No Hospitals in your region</div>\n  }\n  if (hospitalData.data && sector !== \"\" && subDistrict !== \"\") {\n    hospitalRender =\n      <div>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[hospitalData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleHospitalChange}>\n            <option value=\"\">...</option>\n            {Object.keys(hospitalData.data.organisationUnits).map(key => <option key={key} value={hospitalData.data.organisationUnits[key].id}>{hospitalData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  return (\n    <div>\n      <Button variant={props.btnColor} onClick={handleShow} style={{ borderRadius: \"0\" }}>\n        {props.btnName}\n      </Button>\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Organisation Unit</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"myForm\">\n            {provinceRender}{districtRender}{subDistrictRender}{sectorRender}{hospitalRender}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Select\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\nexport default OrgData\n"]},"metadata":{},"sourceType":"module"}