{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form, Row, Col, Card } from 'react-bootstrap';\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown';\nimport { HttpRequests } from '../Data/HttpRequest';\nlet [acknowledgementList, acknowledgeVaccine, acknowledgementData] = [[], [], null];\n\nconst Distributions = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [distributionId, setDistributionId] = useState(null);\n  const [acknowledgeVaccine, setAcknowledgeVaccine] = useState(null);\n  const [quantityRequested, setQuantityRequested] = useState(null);\n  const [vaccine, setVaccine] = useState('');\n  const [disabled, setDisabled] = useState(false);\n  const {\n    value: quantity,\n    bind: bindQuantity,\n    reset: resetQuantity\n  } = useInput('');\n  const {\n    value: batchNumber,\n    bind: bindBatchNumber,\n    reset: resetBatchNumber\n  } = useInput('');\n  const {\n    value: pcvStatus,\n    bind: bindPcvStatus,\n    reset: resetPcvStatus\n  } = useInput('');\n  const {\n    value: comments,\n    bind: bindComments,\n    reset: resetComments\n  } = useInput('');\n  const [inputError, setInputError] = useState(null);\n  const [spin, setSpin] = useState(null);\n  const [Deleted, setDeleted] = useState(0);\n  const config = {\n    method: 'get',\n    url: 'http://localhost:8765/api/distribution/acknowledge',\n    headers: {\n      'auth': localStorage.getItem('vmisJwt')\n    }\n  };\n  let distributionData = HttpRequests(config);\n\n  const vaccineHandover = vac => {\n    const mySelectElement = document.getElementById(\"vaccineSelectionDropdown\");\n    mySelectElement.value = vac.vacId;\n    mySelectElement.dispatchEvent(new MouseEvent('change', {\n      bubbles: true,\n      cancelable: true,\n      view: window\n    }));\n  };\n\n  const handleAddToList = evt => {\n    evt.preventDefault();\n\n    if (vaccine && quantityRequested && quantity) {\n      acknowledgeVaccine.push({\n        \"vaccineName\": vaccine.vaccineName,\n        \"vaccineId\": vaccine.vaccineId,\n        \"itemRequestedQuantity\": quantityRequested,\n        \"itemQuatity\": quantity\n      });\n      setVaccine('');\n      document.getElementById(\"vaccineSelectionDropdown\").value = \"\";\n      resetQuantity();\n      setInputError('');\n    } else {\n      setInputError('No vaccine to Distribute');\n    }\n  };\n\n  const deleteAcknowledgement = e => {\n    acknowledgeVaccine.splice(e, 1);\n    setInterval(() => {\n      setDeleted(true);\n    }, 50);\n    setDeleted(false);\n  };\n\n  const handleApiSubmission = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [distributionData !== undefined && distributionData.data ? /*#__PURE__*/_jsxDEV(Col, {\n        children: Object.keys(distributionData.data).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [\"from \", distributionData.data[key][0].date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: () => [setDistributionId(key)],\n            children: \"Acknowledge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 72\n      }, this) : distributionData !== undefined && distributionData.loading ? /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 83\n      }, this) : distributionData !== undefined && distributionData.error ? /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 193\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 188\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: \"No un Acknowledged Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 269\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 264\n      }, this), distributionId ? /*#__PURE__*/_jsxDEV(Col, {\n        children: distributionData.data[distributionId].map(key => console.log())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Distributions, \"6dSTE+r8RdOYTzaDwTFEfDsPUe0=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = Distributions;\nexport default Distributions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Distributions\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Pages/AcknowledgeDistribution.js"],"names":["React","useEffect","useState","axios","Spinner","Button","Form","Row","Col","Card","useInput","constraintCheck","VaccinesList","HttpRequests","acknowledgementList","acknowledgeVaccine","acknowledgementData","Distributions","props","message","setMessage","distributionId","setDistributionId","setAcknowledgeVaccine","quantityRequested","setQuantityRequested","vaccine","setVaccine","disabled","setDisabled","value","quantity","bind","bindQuantity","reset","resetQuantity","batchNumber","bindBatchNumber","resetBatchNumber","pcvStatus","bindPcvStatus","resetPcvStatus","comments","bindComments","resetComments","inputError","setInputError","spin","setSpin","Deleted","setDeleted","config","method","url","headers","localStorage","getItem","distributionData","vaccineHandover","vac","mySelectElement","document","getElementById","vacId","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","handleAddToList","evt","preventDefault","push","vaccineName","vaccineId","deleteAcknowledgement","e","splice","setInterval","handleApiSubmission","undefined","data","Object","keys","map","key","index","date","loading","error","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Spinner, Button, Form, Row, Col, Card } from 'react-bootstrap'\nimport { useInput } from '../Data/useInput';\nimport { constraintCheck } from '../Data/ConstraintCheck';\nimport VaccinesList from '../Components/VaccinesSelectDropDown'\nimport { HttpRequests } from '../Data/HttpRequest';\nlet [acknowledgementList, acknowledgeVaccine, acknowledgementData] = [[], [], null]\nconst Distributions = (props) => {\n    const [message, setMessage] = useState('')\n    const [distributionId, setDistributionId] = useState(null)\n    const [acknowledgeVaccine, setAcknowledgeVaccine] = useState(null)\n    const [quantityRequested, setQuantityRequested] = useState(null)\n    const [vaccine, setVaccine] = useState('');\n    const [disabled, setDisabled] = useState(false)\n    const { value: quantity, bind: bindQuantity, reset: resetQuantity } = useInput('');\n    const { value: batchNumber, bind: bindBatchNumber, reset: resetBatchNumber } = useInput('');\n    const { value: pcvStatus, bind: bindPcvStatus, reset: resetPcvStatus } = useInput('');\n    const { value: comments, bind: bindComments, reset: resetComments } = useInput('');\n    const [inputError, setInputError] = useState(null)\n    const [spin, setSpin] = useState(null)\n    const [Deleted, setDeleted] = useState(0)\n    const config = {\n        method: 'get',\n        url: 'http://localhost:8765/api/distribution/acknowledge',\n        headers: {\n            'auth': localStorage.getItem('vmisJwt')\n        }\n    };\n    let distributionData = HttpRequests(config)\n    const vaccineHandover = (vac) => {\n        const mySelectElement = document.getElementById(\"vaccineSelectionDropdown\");\n        mySelectElement.value = vac.vacId\n        mySelectElement.dispatchEvent(\n            new MouseEvent('change', {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n            }));\n    }\n    const handleAddToList = (evt) => {\n        evt.preventDefault();\n        if (vaccine && quantityRequested && quantity) {\n            acknowledgeVaccine.push({\n                \"vaccineName\": vaccine.vaccineName,\n                \"vaccineId\": vaccine.vaccineId,\n                \"itemRequestedQuantity\": quantityRequested,\n                \"itemQuatity\": quantity,\n            });\n            setVaccine('');\n            document.getElementById(\"vaccineSelectionDropdown\").value = \"\";\n            resetQuantity();\n            setInputError('')\n        }\n        else {\n            setInputError('No vaccine to Distribute')\n        }\n    }\n    const deleteAcknowledgement = (e) => {\n        acknowledgeVaccine.splice(e, 1)\n        setInterval(() => {\n            setDeleted(true)\n        }, 50);\n        setDeleted(false)\n    }\n    const handleApiSubmission = (e) => {\n        e.preventDefault()\n    }\n    return (<div>\n        <Row>\n            {distributionData !== undefined && distributionData.data ? <Col>\n                {Object.keys(distributionData.data).map((key, index) => (\n                    <Card key={index}>\n                        <Card.Header>from {distributionData.data[key][0].date}</Card.Header>\n                        <button className=\"btn btn-info\" onClick={() => ([setDistributionId(key)])}>Acknowledge</button>\n                    </Card>\n                ))}\n\n            </Col> : distributionData !== undefined && distributionData.loading ? <Col><Spinner animation={\"border\"} /></Col> : distributionData !== undefined && distributionData.error ? <Col><div className=\"alert alert-danger\">Something went wrong</div></Col> : <Col><div className=\"alert alert-info\">No un Acknowledged Distribution</div></Col>}\n            {distributionId ?\n                <Col>{distributionData.data[distributionId].map(key=>console.log())}</Col>\n                : \"\"}\n        </Row>\n    </div>)\n}\n\nexport default Distributions;"]},"metadata":{},"sourceType":"module"}