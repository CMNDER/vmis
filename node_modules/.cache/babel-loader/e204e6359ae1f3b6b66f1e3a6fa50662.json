{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { Delete } from '@material-ui/icons';\n\nfunction Chart(props) {\n  _s();\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let data = {\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  }; // labels\n\n  if (props.reset) {\n    delete data.labels;\n  }\n\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    if (data.hasOwnProperty(\"labels\")) {\n      delete data.labels;\n    }\n\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n\n    if (props.date.length < 3 && props.date === \"6\") {\n      let today = new Date();\n      let year = today.getFullYear();\n      let month = today.getMonth();\n      let i = 0;\n      let lastSixMonths = [];\n      let unSortedMonths = [];\n\n      do {\n        if (month < 0) {\n          month = 11;\n          year--;\n        }\n\n        month--;\n        unSortedMonths.push(months[month]);\n        i++;\n      } while (i < 6);\n\n      for (let j = unSortedMonths.length - 1; j >= 0; j--) {\n        lastSixMonths.push(unSortedMonths[j]);\n      }\n\n      months = lastSixMonths;\n      data = {\n        labels: months,\n        label: [\"Stock status\"],\n        datasets: []\n      };\n    } else if (props.date === \"12\") {\n      data = {\n        labels: months,\n        label: [\"Stock status\"],\n        datasets: []\n      };\n    }\n  } else if (props.date && props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n  let [quantities, vaccineNames, colors, borderColors] = [[], [], [], []];\n\n  if (config) {\n    if (config.data) {\n      if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n        for (let month in months) {\n          if (vaccineStock[month]) {\n            for (let i in vaccineStock[month]) {\n              vaccineNames.push(vaccineStock[month][i].vaccineName);\n              quantities.push(vaccineStock[month][i].quantity);\n              colors.push(vaccineStock[month][i].color);\n              borderColors.push(vaccineStock[month][i].borderColor);\n            }\n\n            data.datasets.push({\n              label: vaccineNames,\n              data: quantities,\n              backgroundColor: colors,\n              borderColor: borderColors,\n              borderWidth: 1\n            });\n            quantities = [];\n            vaccineNames = [];\n            colors = [];\n            borderColors = [];\n          } else {\n            quantities.push(null);\n            vaccineNames.push(null);\n            colors.push(null);\n            borderColors.push(null);\n          }\n        }\n\n        console.log(data);\n      }\n    }\n  }\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n      data.datasets.push({\n        label: [element.vaccineName],\n        data: [element.quantity],\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      title: \"Stock status\",\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","Delete","Chart","props","vaccineStock","setVaccineStock","months","data","label","datasets","options","scales","yAxes","ticks","beginAtZero","reset","labels","config","requestOrgunitId","date","hasOwnProperty","method","url","headers","localStorage","getItem","orgunit","length","today","Date","year","getFullYear","month","getMonth","i","lastSixMonths","unSortedMonths","push","j","then","res","catch","error","console","log","quantities","vaccineNames","colors","borderColors","vaccineName","quantity","color","borderColor","backgroundColor","borderWidth","element","Object","keys","map","key","index","headerColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { Delete } from '@material-ui/icons';\nfunction Chart(props) {\n    const [vaccineStock, setVaccineStock] = useState(null)\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let data = {\n        label: [\"Stock status\"],\n        datasets: [],\n    };\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n    // labels\n    if(props.reset){\n        delete data.labels;\n    }\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        if(data.hasOwnProperty(\"labels\")){\n            delete data.labels;\n        }\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n        if (props.date.length < 3 && props.date === \"6\") {\n            let today = new Date();\n            let year = today.getFullYear();\n            let month = today.getMonth();\n            let i = 0;\n            let lastSixMonths = []\n            let unSortedMonths = []\n            do {\n                if (month < 0) {\n                    month = 11;\n                    year--;\n                }\n                month--;\n                unSortedMonths.push(months[month])\n                i++;\n            } while (i < 6);\n            for (let j = unSortedMonths.length - 1; j >= 0; j--) {\n                lastSixMonths.push(unSortedMonths[j])\n            }\n            months = lastSixMonths\n\n            data = {\n                labels: months,\n                label: [\"Stock status\"],\n                datasets: [],\n\n            };\n        }\n        else if (props.date === \"12\") {\n            data = {\n                labels: months,\n                label: [\"Stock status\"],\n                datasets: [],\n            };\n        }\n\n    }\n    else if (props.date && props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n    let [quantities, vaccineNames, colors, borderColors] = [[], [], [], []]\n    if (config) {\n        if (config.data) {\n            if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n                for (let month in months) {\n                    if (vaccineStock[month]) {\n                        for (let i in vaccineStock[month]) {\n                            vaccineNames.push(vaccineStock[month][i].vaccineName)\n                            quantities.push(vaccineStock[month][i].quantity)\n                            colors.push(vaccineStock[month][i].color)\n                            borderColors.push(vaccineStock[month][i].borderColor)\n                        }\n                        data.datasets.push({\n                            label: vaccineNames,\n                            data: quantities,\n                            backgroundColor: colors,\n                            borderColor: borderColors,\n                            borderWidth: 1\n                        })\n                        quantities = [];\n                        vaccineNames = [];\n                        colors = [];\n                        borderColors = [];\n                    } else {\n                        quantities.push(null)\n                        vaccineNames.push(null)\n                        colors.push(null)\n                        borderColors.push(null)\n                    }\n                }\n                console.log(data);\n            }\n        }\n    }\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            data.datasets.push({\n                label: [element.vaccineName],\n                data: [element.quantity],\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n        }\n    }\n    return (\n        <div className='container'>\n            <Bar data={data} title='Stock status' options={options} />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}