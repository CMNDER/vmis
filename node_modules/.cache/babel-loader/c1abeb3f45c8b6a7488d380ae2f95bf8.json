{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { DateParser } from '../Data/Date';\n\nfunction Chart(props) {\n  _s();\n\n  const data = {\n    labels: [],\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // labels\n\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n\n      if (vaccineStock[i].hasOwnProperty(\"date\")) {\n        let newDate = new Date(DateParser(vaccineStock[i].data));\n        data.labels.push(months[newDate.getMonth()]);\n      }\n\n      data.datasets.push({\n        label: element.vaccineName,\n        data: element.quantity,\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n    }\n  }\n\n  for (const i in vaccineStock) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      title: \"Stock status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","DateParser","Chart","props","data","labels","label","datasets","months","config","requestOrgunitId","date","method","url","headers","localStorage","getItem","orgunit","vaccineStock","setVaccineStock","then","res","catch","error","console","log","i","hasOwnProperty","element","newDate","Date","push","getMonth","vaccineName","quantity","backgroundColor","color","borderColor","borderWidth","Object","keys","map","key","index","headerColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport { DateParser } from '../Data/Date';\nfunction Chart(props) {\n    const data = {\n        labels:[],\n        label: [\"Stock status\"],\n        datasets: []\n    };\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    // labels\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    const [vaccineStock, setVaccineStock] = useState(null)\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            if (vaccineStock[i].hasOwnProperty(\"date\")) {\n                let newDate = new Date(DateParser(vaccineStock[i].data))\n                data.labels.push(months[newDate.getMonth()])\n                }\n            data.datasets.push({\n                label: element.vaccineName,\n                data: element.quantity,\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n        }\n    }\n    for (const i in vaccineStock) {\n\n    }\n    return (\n        <div className='container'>\n            <Bar data={data} title='Stock status' />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}