{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\n\nfunction Chart(props) {\n  _s();\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const data = {\n    labels: months,\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  }; // labels\n\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    data.datasets.splice(0);\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    data.datasets = [];\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    data.datasets = [];\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && props.requestOrgunitId) {\n    data.datasets = [];\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n\n  if (config) {\n    if (config.data) {\n      if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n        for (const i in months) {\n          if (vaccineStock[i]) {\n            const element = vaccineStock[i];\n            data.datasets.push({\n              label: Object.keys(vaccineStock[i]).forEach(e => e.vaccineName),\n              data: [parseInt(i) === months.indexOf(months[i]) ? Object.keys(vaccineStock[i]).forEach(e => e.quantity) : null],\n              backgroundColor: element.color,\n              borderColor: element.borderColor,\n              borderWidth: 1\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n      data.datasets.push({\n        label: [element.vaccineName],\n        data: [element.quantity],\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n    }\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      title: \"Stock status\",\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","Chart","props","vaccineStock","setVaccineStock","months","data","labels","label","datasets","options","scales","yAxes","ticks","beginAtZero","config","requestOrgunitId","date","splice","method","url","headers","localStorage","getItem","orgunit","then","res","catch","error","console","log","hasOwnProperty","length","i","element","push","Object","keys","forEach","e","vaccineName","parseInt","indexOf","quantity","backgroundColor","color","borderColor","borderWidth","map","key","index","headerColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nfunction Chart(props) {\n    const [vaccineStock, setVaccineStock] = useState(null)\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const data = {\n        labels: months,\n        label: [\"Stock status\"],\n        datasets: [],\n\n    };\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n    // labels\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        data.datasets.splice(0,)\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        data.datasets=[]\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        data.datasets=[]\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n        \n    }\n    else if (props.date && props.requestOrgunitId) {\n        data.datasets=[]\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n    if (config) {\n        if (config.data) {\n            if (config.data.hasOwnProperty(\"date\") && config.data.date.length < 3) {\n                for (const i in months) {\n                    if (vaccineStock[i]) {\n                        const element = vaccineStock[i];\n                        data.datasets.push({\n                            label: Object.keys(vaccineStock[i]).forEach(e => (e.vaccineName)),\n                            data: [parseInt(i) === months.indexOf(months[i]) ? Object.keys(vaccineStock[i]).forEach(e => (e.quantity)) : null],\n                            backgroundColor: element.color,\n                            borderColor: element.borderColor,\n                            borderWidth: 1\n                        })\n                    }\n                }\n            }\n        }\n    }\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            data.datasets.push({\n                label: [element.vaccineName],\n                data: [element.quantity],\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n        }\n    }\n    console.log(data)\n    return (\n        <div className='container'>\n            <Bar data={data} title='Stock status' options={options} />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}