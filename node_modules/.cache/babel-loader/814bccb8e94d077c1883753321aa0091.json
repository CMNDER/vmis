{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GetOrgUnits } from '../Data/OrgDataHook';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst OrgData = (props, name = \"Select Organisation Unit\", btn = \"btn btn-info\") => {\n  _s();\n\n  const universalUrl = 'https://dev.hisprwanda.org/hiv/api/organisationUnits/';\n  let [provinceData, districtData, subDistrictData, sectorData, hospitalData] = [null, null, null, null, null];\n  let [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender] = [null, null, null, null, null];\n  const levels = ['National', 'Province', 'District', 'Sub District', 'Sector', 'Hospital'];\n  const [province, setProvince] = useState();\n  const [district, setDistrict] = useState();\n  const [subDistrict, setSubDistrict] = useState();\n  const [sector, setSector] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => (setShow(false), [districtData.data, subDistrictData.data, sectorData.data, hospitalData.data] = [null, null, null, null]);\n\n  const handleShow = () => setShow(true);\n\n  const country = GetOrgUnits(`${universalUrl}?paging=false&level=1`);\n  let countryLevelId = null;\n\n  if (country.data !== null) {\n    countryLevelId = country.data.organisationUnits[0].id;\n  }\n\n  provinceData = GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`);\n\n  const handleProvinceChange = event => {\n    setProvince(event.target.value);\n    districtData = subDistrictData = sectorData = hospitalData = null;\n    setDistrict(null);\n    setSubDistrict(null);\n    setSector(null);\n    props.onChange(event.target.value);\n  };\n\n  const handleDistrictChange = event => {\n    setDistrict(event.target.value);\n    districtData = null;\n    subDistrictData = null;\n    sectorData = null;\n    hospitalData = null;\n    setSubDistrict(null);\n    setSector(null);\n    props.onChange(event.target.value);\n  };\n\n  const handleSubDistrictChange = event => {\n    setSubDistrict(event.target.value);\n    sectorData = null;\n    hospitalData = null;\n    setSector(null);\n    props.onChange(event.target.value);\n  };\n\n  const handleSectorChange = event => {\n    setSector(event.target.value);\n    props.onChange(event.target.value);\n  };\n\n  const handleHospitalChange = event => {\n    props.onChange(event.target.value);\n  };\n\n  districtData = GetOrgUnits(`${universalUrl}${province}?level=1`);\n  subDistrictData = GetOrgUnits(`${universalUrl}${district}?level=1`);\n  sectorData = GetOrgUnits(`${universalUrl}${subDistrict}?level=1`);\n  hospitalData = GetOrgUnits(`${universalUrl}${sector}?level=1`);\n\n  if (provinceData.data) {\n    provinceRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[provinceData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleProvinceChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), Object.keys(provinceData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: provinceData.data.organisationUnits[key].id,\n            children: provinceData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 66\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this);\n  }\n\n  if (districtData.data) {\n    districtRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[districtData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), Object.keys(districtData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: districtData.data.organisationUnits[key].id,\n            children: districtData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 70\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (subDistrictData.data) {\n    subDistrictRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[subDistrictData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSubDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), Object.keys(subDistrictData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subDistrictData.data.organisationUnits[key].id,\n            children: subDistrictData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 77\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (sectorData.data) {\n    sectorRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[sectorData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSectorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), Object.keys(sectorData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sectorData.data.organisationUnits[key].id,\n            children: sectorData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 68\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (hospitalData.error && hospitalData.error_type.response.status === 404) {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Hospitals in your region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (hospitalData.data && sector !== \"\" && subDistrict !== \"\") {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[hospitalData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleHospitalChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), Object.keys(hospitalData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hospitalData.data.organisationUnits[key].id,\n            children: hospitalData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 80\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      style: {\n        borderRadius: \"0\"\n      },\n      children: [\"Hello\", console.log(\"name\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"myForm\",\n          children: [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrgData, \"Ny/vIvn+xW7WgivASy1i9k08Cdo=\");\n\n_c = OrgData;\nexport default OrgData;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrgData\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js"],"names":["React","useState","GetOrgUnits","Modal","Button","Form","OrgData","props","name","btn","universalUrl","provinceData","districtData","subDistrictData","sectorData","hospitalData","provinceRender","districtRender","subDistrictRender","sectorRender","hospitalRender","levels","province","setProvince","district","setDistrict","subDistrict","setSubDistrict","sector","setSector","show","setShow","handleClose","data","handleShow","country","countryLevelId","organisationUnits","id","handleProvinceChange","event","target","value","onChange","handleDistrictChange","handleSubDistrictChange","handleSectorChange","handleHospitalChange","level","Object","keys","map","key","error","error_type","response","status","borderRadius","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {GetOrgUnits} from '../Data/OrgDataHook'\nimport {Modal,Button,Form} from 'react-bootstrap' \nconst OrgData=(props,name=\"Select Organisation Unit\",btn=\"btn btn-info\")=>{\nconst universalUrl='https://dev.hisprwanda.org/hiv/api/organisationUnits/'\nlet [provinceData,districtData,subDistrictData,sectorData,hospitalData]=[null,null,null,null,null]\nlet [provinceRender,districtRender,subDistrictRender,sectorRender,hospitalRender]=[null,null,null,null,null]\nconst levels=['National','Province','District','Sub District','Sector','Hospital']\nconst [province,setProvince]=useState()\nconst [district,setDistrict]=useState()\nconst [subDistrict,setSubDistrict]=useState()\nconst [sector,setSector]=useState()\nconst [show, setShow] = useState(false)\nconst handleClose = () =>(setShow(false),[districtData.data,subDistrictData.data,sectorData.data,hospitalData.data]=[null,null,null,null])\nconst handleShow = () =>setShow(true)\nconst country=GetOrgUnits(`${universalUrl}?paging=false&level=1`)\nlet countryLevelId=null;\nif (country.data!==null){\n   countryLevelId=country.data.organisationUnits[0].id;\n}\nprovinceData=GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`)\nconst handleProvinceChange=(event)=>{\n  setProvince(event.target.value)\n  districtData=subDistrictData=sectorData=hospitalData=null\n  setDistrict(null)\n  setSubDistrict(null)\n  setSector(null)\n  props.onChange(event.target.value)\n}\nconst handleDistrictChange=(event)=>{\n  setDistrict(event.target.value)\n  districtData=null\n  subDistrictData=null\n  sectorData=null\n  hospitalData=null\n  setSubDistrict(null)\n  setSector(null)\n  props.onChange(event.target.value)\n}\nconst handleSubDistrictChange=(event)=>{\n  setSubDistrict(event.target.value)\n  sectorData=null\n  hospitalData=null\n  setSector(null)\n  props.onChange(event.target.value)\n\n}\nconst handleSectorChange=(event)=>{\n  setSector(event.target.value)\n  props.onChange(event.target.value)\n\n\n}\nconst handleHospitalChange=(event)=>{\n  props.onChange(event.target.value)\n\n}\ndistrictData=GetOrgUnits(`${universalUrl}${province}?level=1`)\nsubDistrictData=GetOrgUnits(`${universalUrl}${district}?level=1`)\nsectorData=GetOrgUnits(`${universalUrl}${subDistrict}?level=1`)\nhospitalData=GetOrgUnits(`${universalUrl}${sector}?level=1`)\nif (provinceData.data){\n  provinceRender=\n  <div>\n  <Form.Group controlId=\"exampleForm.SelectCustom\">\n      <Form.Label>{levels[provinceData.data.organisationUnits[0].level-1]} Level</Form.Label>\n      <Form.Control  as=\"select\" custom onChange={handleProvinceChange}>\n      <option value=\"\">...</option>\n      {Object.keys(provinceData.data.organisationUnits).map(key=><option key={key} value={provinceData.data.organisationUnits[key].id}>{provinceData.data.organisationUnits[key].name}</option>)}\n      </Form.Control>\n    </Form.Group>\n  </div>\n}\n    if (districtData.data ){\n      districtRender=\n      <div>\n      <Form.Group controlId=\"exampleForm.SelectCustom\">\n      <Form.Label>{levels[districtData.data.organisationUnits[0].level-1]} Level</Form.Label>\n          <Form.Control  as=\"select\" custom onChange={handleDistrictChange}>\n            <option value=\"\">...</option>\n          {Object.keys(districtData.data.organisationUnits).map(key=><option key={key} value={districtData.data.organisationUnits[key].id}>{districtData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n    }\n          if (subDistrictData.data  ){\n            subDistrictRender=\n            <div>\n              <Form.Group controlId=\"exampleForm.SelectCustom\">\n              <Form.Label>{levels[subDistrictData.data.organisationUnits[0].level-1]} Level</Form.Label>\n\n              <Form.Control  as=\"select\" custom onChange={handleSubDistrictChange}>\n              <option value=\"\">...</option>\n              {Object.keys(subDistrictData.data.organisationUnits).map(key=><option key={key} value={subDistrictData.data.organisationUnits[key].id}>{subDistrictData.data.organisationUnits[key].name}</option>)}\n              </Form.Control>\n            </Form.Group>\n          \n            </div>\n          }\n      if (sectorData.data){\n        sectorRender=\n        <div>\n          <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>{levels[sectorData.data.organisationUnits[0].level-1]} Level</Form.Label>\n          <Form.Control  as=\"select\" custom onChange={handleSectorChange}>\n          <option value=\"\">...</option>\n          {Object.keys(sectorData.data.organisationUnits).map(key=><option key={key} value={sectorData.data.organisationUnits[key].id}>{sectorData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n        </div>\n      }\n      if(hospitalData.error && hospitalData.error_type.response.status===404){\n        hospitalRender=<div>No Hospitals in your region</div>\n      }\n                if (hospitalData.data && sector!==\"\" && subDistrict!==\"\"){\n                  hospitalRender=\n                  <div>\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\n                    <Form.Label>{levels[hospitalData.data.organisationUnits[0].level-1]} Level</Form.Label>\n                    <Form.Control  as=\"select\" custom onChange={handleHospitalChange}>\n                    <option value=\"\">...</option>\n                    {Object.keys(hospitalData.data.organisationUnits).map(key=><option key={key} value={hospitalData.data.organisationUnits[key].id}>{hospitalData.data.organisationUnits[key].name}</option>)}\n                    </Form.Control>\n                  </Form.Group>\n                  </div>\n            }\nreturn(\n    <div>\n            <Button variant=\"primary\" onClick={handleShow} style={{borderRadius:\"0\"}}>\n        Hello{console.log(\"name\")}\n      </Button>\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"myForm\"> \n        {provinceRender}{districtRender}{subDistrictRender}{sectorRender}{hospitalRender}\n      </Form>\n          </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Select\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    )\n}\nexport default OrgData\n"]},"metadata":{},"sourceType":"module"}