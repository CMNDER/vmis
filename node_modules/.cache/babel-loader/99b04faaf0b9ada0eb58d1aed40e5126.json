{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\n\nfunction Chart(props) {\n  _s();\n\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    label: [\"Stock status\"],\n    datasets: []\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const halfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]; // labels\n\n  let config = null;\n\n  if (!props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.requestOrgunitId && !props.date) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock',\n      data: {\n        orgunit: props.requestOrgunitId\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && !props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  } else if (props.date && props.requestOrgunitId) {\n    config = {\n      method: 'post',\n      url: 'http://localhost:8765/api/stock/',\n      data: {\n        orgunit: props.requestOrgunitId,\n        date: props.date\n      },\n      headers: {\n        \"auth\": localStorage.getItem(\"vmisJwt\")\n      }\n    };\n  }\n\n  const [vaccineStock, setVaccineStock] = useState(null);\n  useEffect(() => {\n    axios(config).then(res => {\n      setVaccineStock(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [props.requestOrgunitId, props.date]);\n\n  for (const i in vaccineStock) {\n    if (vaccineStock.hasOwnProperty(i)) {\n      const element = vaccineStock[i];\n\n      if (vaccineStock[i].hasOwnProperty(\"date\")) {\n        let newDate = new Date(vaccineStock[i].date);\n\n        if (vaccineStock[i].period === \"6\") {\n          data.labels = months;\n        }\n      }\n\n      data.datasets.push({\n        label: element.vaccineName,\n        data: element.quantity,\n        backgroundColor: element.color,\n        borderColor: element.borderColor,\n        borderWidth: 1\n      });\n    }\n  }\n\n  console.log(data.datasets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      title: \"Stock status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center font-weight-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: vaccineStock ? Object.keys(vaccineStock).map((key, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mx-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: `bg-${vaccineStock[key].headerColor} text-center text-light`,\n              children: [vaccineStock[key].vaccineName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vaccineStock[key].quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kZhRsOm3ChxnAx+dEtTs3gVLVqU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/Chart.js"],"names":["React","useState","useEffect","Bar","axios","Card","Chart","props","data","labels","label","datasets","options","scales","yAxes","ticks","beginAtZero","months","halfYear","config","requestOrgunitId","date","method","url","headers","localStorage","getItem","orgunit","vaccineStock","setVaccineStock","then","res","catch","error","console","log","i","hasOwnProperty","element","newDate","Date","period","push","vaccineName","quantity","backgroundColor","color","borderColor","borderWidth","Object","keys","map","key","index","headerColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CADC;AAETC,IAAAA,KAAK,EAAE,CAAC,cAAD,CAFE;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GAAb;AAMA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAE;AADV;AADX,OADG;AADH;AADI,GAAhB;AAWA,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AACA,QAAMC,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,CAAjB,CAnBkB,CAoBlB;;AACA,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAI,CAACZ,KAAK,CAACa,gBAAP,IAA2B,CAACb,KAAK,CAACc,IAAtC,EAA4C;AACxCF,IAAAA,MAAM,GAAG;AACLG,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,GAAG,EAAE,iCAFA;AAGLC,MAAAA,OAAO,EAAE;AACL,gBAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAHJ,KAAT;AAOH,GARD,MAQO,IAAInB,KAAK,CAACa,gBAAN,IAA0B,CAACb,KAAK,CAACc,IAArC,EAA2C;AAC9CF,IAAAA,MAAM,GAAG;AACLG,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,GAAG,EAAE,iCAFA;AAGLf,MAAAA,IAAI,EAAE;AAAEmB,QAAAA,OAAO,EAAEpB,KAAK,CAACa;AAAjB,OAHD;AAILI,MAAAA,OAAO,EAAE;AACL,gBAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAJJ,KAAT;AAQH,GATM,MAUF,IAAInB,KAAK,CAACc,IAAN,IAAc,CAACd,KAAK,CAACa,gBAAzB,EAA2C;AAC5CD,IAAAA,MAAM,GAAG;AACLG,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,GAAG,EAAE,kCAFA;AAGLf,MAAAA,IAAI,EAAE;AAAEa,QAAAA,IAAI,EAAEd,KAAK,CAACc;AAAd,OAHD;AAILG,MAAAA,OAAO,EAAE;AACL,gBAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAJJ,KAAT;AAQH,GATI,MAUA,IAAInB,KAAK,CAACc,IAAN,IAAcd,KAAK,CAACa,gBAAxB,EAA0C;AAC3CD,IAAAA,MAAM,GAAG;AACLG,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,GAAG,EAAE,kCAFA;AAGLf,MAAAA,IAAI,EAAE;AAAEmB,QAAAA,OAAO,EAAEpB,KAAK,CAACa,gBAAjB;AAAmCC,QAAAA,IAAI,EAAEd,KAAK,CAACc;AAA/C,OAHD;AAILG,MAAAA,OAAO,EAAE;AACL,gBAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB;AADH;AAJJ,KAAT;AAQH;;AACD,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,IAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACe,MAAD,CAAL,CAAcW,IAAd,CAAmBC,GAAG,IAAI;AACtBF,MAAAA,eAAe,CAACE,GAAG,CAACvB,IAAL,CAAf;AACH,KAFD,EAEGwB,KAFH,CAEUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAJD;AAKH,GANQ,EAMN,CAAC1B,KAAK,CAACa,gBAAP,EAAyBb,KAAK,CAACc,IAA/B,CANM,CAAT;;AAQA,OAAK,MAAMe,CAAX,IAAgBR,YAAhB,EAA8B;AAC1B,QAAIA,YAAY,CAACS,cAAb,CAA4BD,CAA5B,CAAJ,EAAoC;AAChC,YAAME,OAAO,GAAGV,YAAY,CAACQ,CAAD,CAA5B;;AACA,UAAIR,YAAY,CAACQ,CAAD,CAAZ,CAAgBC,cAAhB,CAA+B,MAA/B,CAAJ,EAA4C;AACxC,YAAIE,OAAO,GAAG,IAAIC,IAAJ,CAASZ,YAAY,CAACQ,CAAD,CAAZ,CAAgBf,IAAzB,CAAd;;AACA,YAAIO,YAAY,CAACQ,CAAD,CAAZ,CAAgBK,MAAhB,KAA2B,GAA/B,EAAoC;AAChCjC,UAAAA,IAAI,CAACC,MAAL,GAAcQ,MAAd;AACH;AACJ;;AACDT,MAAAA,IAAI,CAACG,QAAL,CAAc+B,IAAd,CAAmB;AACfhC,QAAAA,KAAK,EAAE4B,OAAO,CAACK,WADA;AAEfnC,QAAAA,IAAI,EAAC8B,OAAO,CAACM,QAFE;AAGfC,QAAAA,eAAe,EAAEP,OAAO,CAACQ,KAHV;AAIfC,QAAAA,WAAW,EAAET,OAAO,CAACS,WAJN;AAKfC,QAAAA,WAAW,EAAE;AALE,OAAnB;AAOH;AACJ;;AACDd,EAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAI,CAACG,QAAjB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEH,IAAX;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBACKoB,YAAY,GAAGqB,MAAM,CAACC,IAAP,CAAYtB,YAAZ,EAA0BuB,GAA1B,CAA8B,CAACC,GAAD,EAAMC,KAAN,kBAC1C,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAG,MAAKzB,YAAY,CAACwB,GAAD,CAAZ,CAAkBE,WAAY,yBAA5D;AAAA,yBAAuF1B,YAAY,CAACwB,GAAD,CAAZ,CAAkBT,WAAzG;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,wBACKf,YAAY,CAACwB,GAAD,CAAZ,CAAkBR;AADvB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAA4BS,KAA5B;AAAA;AAAA;AAAA;AAAA,kBADY,CAAH,GAOR;AART;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7GQ/C,K;;KAAAA,K;AA8GT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nfunction Chart(props) {\n    const data = {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        label: [\"Stock status\"],\n        datasets: [],\n        \n    };\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const halfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",];\n    // labels\n    let config = null;\n    if (!props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    } else if (props.requestOrgunitId && !props.date) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock',\n            data: { orgunit: props.requestOrgunitId },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && !props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    else if (props.date && props.requestOrgunitId) {\n        config = {\n            method: 'post',\n            url: 'http://localhost:8765/api/stock/',\n            data: { orgunit: props.requestOrgunitId, date: props.date },\n            headers: {\n                \"auth\": localStorage.getItem(\"vmisJwt\"),\n            },\n        };\n    }\n    const [vaccineStock, setVaccineStock] = useState(null)\n    useEffect(() => {\n        axios(config).then(res => {\n            setVaccineStock(res.data)\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [props.requestOrgunitId, props.date])\n\n    for (const i in vaccineStock) {\n        if (vaccineStock.hasOwnProperty(i)) {\n            const element = vaccineStock[i];\n            if (vaccineStock[i].hasOwnProperty(\"date\")) {\n                let newDate = new Date(vaccineStock[i].date)\n                if (vaccineStock[i].period === \"6\") {\n                    data.labels = months;\n                }\n            }\n            data.datasets.push({\n                label: element.vaccineName,\n                data:element.quantity,\n                backgroundColor: element.color,\n                borderColor: element.borderColor,\n                borderWidth: 1\n            })\n        }\n    }\n    console.log(data.datasets)\n    return (\n        <div className='container'>\n            <Bar data={data} title='Stock status' />\n            <hr />\n            <hr />\n            <div className=\"container text-center font-weight-bold\">\n                <div className='text-center'>\n                    <div className='row'>\n                        {vaccineStock ? Object.keys(vaccineStock).map((key, index) => (\n                            <Card className=\"mx-3\" key={index}>\n                                <Card.Header className={`bg-${vaccineStock[key].headerColor} text-center text-light`}>{vaccineStock[key].vaccineName} </Card.Header>\n                                <Card.Body>\n                                    {vaccineStock[key].quantity}\n                                </Card.Body>\n                            </Card>\n                        )) : \"\"}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}