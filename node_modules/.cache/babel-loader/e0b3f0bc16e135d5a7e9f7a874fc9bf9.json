{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GetOrgUnits } from '../Data/OrgDataHook';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst OrgData = props => {\n  _s();\n\n  const universalUrl = 'https://dev.hisprwanda.org/hiv/api/organisationUnits/';\n  let [provinceData, districtData, subDistrictData, sectorData, hospitalData] = [null, null, null, null, null];\n  let [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender] = [null, null, null, null, null];\n  const levels = ['National', 'Province', 'District', 'Sub District', 'Sector', 'Hospital'];\n  const [province, setProvince] = useState();\n  const [district, setDistrict] = useState();\n  const [subDistrict, setSubDistrict] = useState();\n  const [sector, setSector] = useState(); // get orgunit name\n\n  const [districtparentOrgunit, setDistrictParentOrgunit] = useState('');\n  const [subDistrictparentOrgunit, setSubDistrictParentOrgunit] = useState('');\n  const [sectorparentOrgunit, setSectorParentOrgunit] = useState('');\n  const [ospitalparentOrgunit, setHospitalParentOrgunit] = useState('');\n  const [parentOrgunit, setParentOrgunit] = useState(''); // \n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => [setShow(false), [districtData.data, subDistrictData.data, sectorData.data, hospitalData.data] = [null, null, null, null]];\n\n  const handleShow = () => setShow(true);\n\n  const getSelectedText = elementId => {\n    let elt = document.getElementById(elementId);\n    if (elt.selectedIndex === -1) return null;\n    return elt.options[elt.selectedIndex].text;\n  };\n\n  const country = GetOrgUnits(`${universalUrl}?paging=false&level=1`);\n  let countryLevelId = null;\n\n  if (country.data !== null) {\n    countryLevelId = country.data.organisationUnits[0].id;\n  }\n\n  provinceData = GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`);\n\n  const handleProvinceChange = event => {\n    setProvince(event.target.value);\n    districtData = subDistrictData = sectorData = hospitalData = null;\n    setDistrict(null);\n    setSubDistrict(null);\n    setSector(null);\n    let getName = getSelectedText(event.target.id);\n    props.onChange({\n      orgUnitId: event.target.value,\n      level: 2,\n      orgUnitName: getName\n    });\n    setParentOrgunit(getSelectedText(event.target.id));\n  };\n\n  const handleDistrictChange = event => {\n    setDistrict(event.target.value);\n    districtData = null;\n    subDistrictData = null;\n    sectorData = null;\n    hospitalData = null;\n    setSubDistrict(null);\n    setSector(null);\n    let getName = getSelectedText(event.target.id);\n    props.onChange({\n      orgUnitId: event.target.value,\n      level: 3,\n      orgUnitName: getName,\n      parentOrgunit: province,\n      parentOrgunitName: parentOrgunit\n    });\n    setParentOrgunit(getSelectedText(event.target.id));\n  };\n\n  const handleSubDistrictChange = event => {\n    setSubDistrict(event.target.value);\n    sectorData = null;\n    hospitalData = null;\n    setSector(null);\n    let getName = getSelectedText(event.target.id);\n    props.onChange({\n      orgUnitId: event.target.value,\n      level: 4,\n      orgUnitName: getName,\n      parentOrgunit: province,\n      parentOrgunitName: parentOrgunit\n    });\n    setParentOrgunit(getSelectedText(event.target.id));\n  };\n\n  const handleSectorChange = event => {\n    setSector(event.target.value);\n    let getName = getSelectedText(event.target.id);\n    props.onChange({\n      orgUnitId: event.target.value,\n      level: 5,\n      orgUnitName: getName,\n      parentOrgunit: province,\n      parentOrgunitName: parentOrgunit\n    });\n    setParentOrgunit(getSelectedText(event.target.id));\n  };\n\n  const handleHospitalChange = event => {\n    let getName = getSelectedText(event.target.id);\n    props.onChange({\n      orgUnitId: event.target.value,\n      level: 6,\n      orgUnitName: getName,\n      parentOrgunit: province,\n      parentOrgunitName: parentOrgunit\n    });\n    setParentOrgunit(getSelectedText(event.target.id));\n  };\n\n  districtData = GetOrgUnits(`${universalUrl}${province}?level=1`);\n  subDistrictData = GetOrgUnits(`${universalUrl}${district}?level=1`);\n  sectorData = GetOrgUnits(`${universalUrl}${subDistrict}?level=1`);\n  hospitalData = GetOrgUnits(`${universalUrl}${sector}?level=1`);\n\n  if (provinceData.data) {\n    provinceRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"provinceSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[provinceData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleProvinceChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), Object.keys(provinceData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: provinceData.data.organisationUnits[key].id,\n            children: provinceData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (districtData.data && districtData !== null) {\n    districtRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"districtSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[districtData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), Object.keys(districtData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: districtData.data.organisationUnits[key].id,\n            children: districtData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (subDistrictData.data) {\n    subDistrictRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"subDistrictSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[subDistrictData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSubDistrictChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), Object.keys(subDistrictData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subDistrictData.data.organisationUnits[key].id,\n            children: subDistrictData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 77\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (sectorData.data) {\n    sectorRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"sectorSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[sectorData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleSectorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), Object.keys(sectorData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sectorData.data.organisationUnits[key].id,\n            children: sectorData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 72\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (hospitalData.error && hospitalData.error_type.response.status === 404) {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Hospitals in your region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (hospitalData.data && sector !== \"\" && subDistrict !== \"\") {\n    hospitalRender = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"hospitalSelect\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [levels[hospitalData.data.organisationUnits[0].level - 1], \" Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          onChange: handleHospitalChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), Object.keys(hospitalData.data.organisationUnits).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hospitalData.data.organisationUnits[key].id,\n            children: hospitalData.data.organisationUnits[key].name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: props.btnColor,\n      onClick: handleShow,\n      style: {\n        borderRadius: \"0\"\n      },\n      children: props.btnName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Organisation Unit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"myForm\",\n          children: [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrgData, \"6QLP+hDslbolukmf6tE/eSqAuZo=\");\n\n_c = OrgData;\nexport default OrgData;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrgData\");","map":{"version":3,"sources":["/home/samuel/vmis-1/src/Components/PopModalOrgUnits.js"],"names":["React","useState","GetOrgUnits","Modal","Button","Form","OrgData","props","universalUrl","provinceData","districtData","subDistrictData","sectorData","hospitalData","provinceRender","districtRender","subDistrictRender","sectorRender","hospitalRender","levels","province","setProvince","district","setDistrict","subDistrict","setSubDistrict","sector","setSector","districtparentOrgunit","setDistrictParentOrgunit","subDistrictparentOrgunit","setSubDistrictParentOrgunit","sectorparentOrgunit","setSectorParentOrgunit","ospitalparentOrgunit","setHospitalParentOrgunit","parentOrgunit","setParentOrgunit","show","setShow","handleClose","data","handleShow","getSelectedText","elementId","elt","document","getElementById","selectedIndex","options","text","country","countryLevelId","organisationUnits","id","handleProvinceChange","event","target","value","getName","onChange","orgUnitId","level","orgUnitName","handleDistrictChange","parentOrgunitName","handleSubDistrictChange","handleSectorChange","handleHospitalChange","Object","keys","map","key","name","error","error_type","response","status","btnColor","borderRadius","btnName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { GetOrgUnits } from '../Data/OrgDataHook'\nimport { Modal, Button, Form } from 'react-bootstrap'\nconst OrgData = (props) => {\n  const universalUrl = 'https://dev.hisprwanda.org/hiv/api/organisationUnits/'\n  let [provinceData, districtData, subDistrictData, sectorData, hospitalData] = [null, null, null, null, null]\n  let [provinceRender, districtRender, subDistrictRender, sectorRender, hospitalRender] = [null, null, null, null, null]\n  const levels = ['National', 'Province', 'District', 'Sub District', 'Sector', 'Hospital']\n  const [province, setProvince] = useState()\n  const [district, setDistrict] = useState()\n  const [subDistrict, setSubDistrict] = useState()\n  const [sector, setSector] = useState()\n  // get orgunit name\n  const [districtparentOrgunit, setDistrictParentOrgunit] = useState('')\n  const [subDistrictparentOrgunit, setSubDistrictParentOrgunit] = useState('')\n  const [sectorparentOrgunit, setSectorParentOrgunit] = useState('')\n  const [ospitalparentOrgunit, setHospitalParentOrgunit] = useState('')\n  const [parentOrgunit, setParentOrgunit] = useState('')\n  // \n  const [show, setShow] = useState(false)\n  const handleClose = () => ([setShow(false), [districtData.data, subDistrictData.data, sectorData.data, hospitalData.data] = [null, null, null, null]])\n  const handleShow = () => setShow(true)\n  const getSelectedText = (elementId) => {\n    let elt = document.getElementById(elementId);\n    if (elt.selectedIndex === -1) return null;\n    return elt.options[elt.selectedIndex].text;\n  };\n  const country = GetOrgUnits(`${universalUrl}?paging=false&level=1`)\n  let countryLevelId = null;\n  if (country.data !== null) {\n    countryLevelId = country.data.organisationUnits[0].id;\n  }\n  provinceData = GetOrgUnits(`${universalUrl}${countryLevelId}?level=1`)\n  const handleProvinceChange = (event) => {\n    setProvince(event.target.value)\n    districtData = subDistrictData = sectorData = hospitalData = null\n    setDistrict(null)\n    setSubDistrict(null)\n    setSector(null)\n    let getName = getSelectedText(event.target.id)\n    props.onChange({ orgUnitId: event.target.value, level: 2, orgUnitName: getName })\n    setParentOrgunit(getSelectedText(event.target.id))\n  }\n  const handleDistrictChange = (event) => {\n    setDistrict(event.target.value)\n    districtData = null\n    subDistrictData = null\n    sectorData = null\n    hospitalData = null\n    setSubDistrict(null)\n    setSector(null)\n    let getName = getSelectedText(event.target.id)\n    props.onChange({ orgUnitId: event.target.value, level: 3, orgUnitName: getName ,parentOrgunit:province,parentOrgunitName:parentOrgunit})\n    setParentOrgunit(getSelectedText(event.target.id))\n  }\n  const handleSubDistrictChange = (event) => {\n    setSubDistrict(event.target.value)\n    sectorData = null\n    hospitalData = null\n    setSector(null)\n    let getName = getSelectedText(event.target.id)\n    props.onChange({ orgUnitId: event.target.value, level: 4, orgUnitName: getName ,parentOrgunit:province,parentOrgunitName:parentOrgunit})\n    setParentOrgunit(getSelectedText(event.target.id))\n  }\n  const handleSectorChange = (event) => {\n    setSector(event.target.value)\n    let getName = getSelectedText(event.target.id)\n    props.onChange({ orgUnitId: event.target.value, level: 5, orgUnitName: getName ,parentOrgunit:province,parentOrgunitName:parentOrgunit})\n    setParentOrgunit(getSelectedText(event.target.id))\n  }\n  const handleHospitalChange = (event) => {\n    let getName = getSelectedText(event.target.id)\n    props.onChange({ orgUnitId: event.target.value, level: 6, orgUnitName: getName ,parentOrgunit:province,parentOrgunitName:parentOrgunit})\n    setParentOrgunit(getSelectedText(event.target.id))\n  }\n  districtData = GetOrgUnits(`${universalUrl}${province}?level=1`)\n  subDistrictData = GetOrgUnits(`${universalUrl}${district}?level=1`)\n  sectorData = GetOrgUnits(`${universalUrl}${subDistrict}?level=1`)\n  hospitalData = GetOrgUnits(`${universalUrl}${sector}?level=1`)\n  if (provinceData.data) {\n    provinceRender =\n      <div>\n        <Form.Group controlId=\"provinceSelect\">\n          <Form.Label>{levels[provinceData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleProvinceChange}>\n            <option value=\"\">...</option>\n            {Object.keys(provinceData.data.organisationUnits).map(key => <option key={key} value={provinceData.data.organisationUnits[key].id}>{provinceData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (districtData.data && districtData !== null) {\n    districtRender =\n      <div>\n        <Form.Group controlId=\"districtSelect\">\n          <Form.Label>{levels[districtData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleDistrictChange}>\n            <option value=\"\">...</option>\n            {Object.keys(districtData.data.organisationUnits).map(key => <option key={key} value={districtData.data.organisationUnits[key].id}>{districtData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (subDistrictData.data) {\n    subDistrictRender =\n      <div>\n        <Form.Group controlId=\"subDistrictSelect\">\n          <Form.Label>{levels[subDistrictData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n\n          <Form.Control as=\"select\" custom onChange={handleSubDistrictChange}>\n            <option value=\"\">...</option>\n            {Object.keys(subDistrictData.data.organisationUnits).map(key => <option key={key} value={subDistrictData.data.organisationUnits[key].id}>{subDistrictData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n\n      </div>\n  }\n  if (sectorData.data) {\n    sectorRender =\n      <div>\n        <Form.Group controlId=\"sectorSelect\">\n          <Form.Label>{levels[sectorData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleSectorChange}>\n            <option value=\"\">...</option>\n            {Object.keys(sectorData.data.organisationUnits).map(key => <option key={key} value={sectorData.data.organisationUnits[key].id}>{sectorData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  if (hospitalData.error && hospitalData.error_type.response.status === 404) {\n    hospitalRender = <div>No Hospitals in your region</div>\n  }\n  if (hospitalData.data && sector !== \"\" && subDistrict !== \"\") {\n    hospitalRender =\n      <div>\n        <Form.Group controlId=\"hospitalSelect\">\n          <Form.Label>{levels[hospitalData.data.organisationUnits[0].level - 1]} Level</Form.Label>\n          <Form.Control as=\"select\" custom onChange={handleHospitalChange}>\n            <option value=\"\">...</option>\n            {Object.keys(hospitalData.data.organisationUnits).map(key => <option key={key} value={hospitalData.data.organisationUnits[key].id}>{hospitalData.data.organisationUnits[key].name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </div>\n  }\n  return (\n    <div>\n      <Button variant={props.btnColor} onClick={handleShow} style={{ borderRadius: \"0\" }}>\n        {props.btnName}\n      </Button>\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Organisation Unit</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"myForm\">\n            {provinceRender}{districtRender}{subDistrictRender}{sectorRender}{hospitalRender}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Select\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\nexport default OrgData\n"]},"metadata":{},"sourceType":"module"}